<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2018/06/21/essay/</url>
      <content type="html"><![CDATA[<h1 id="新的旅程，新的开始！"><a href="#新的旅程，新的开始！" class="headerlink" title="新的旅程，新的开始！"></a>新的旅程，新的开始！</h1><p>####今天正式开始在我的这个个人主页上进行，Android技术的学习，无论是反编译还是开发，有什么个人心得和体会我都将发布到此。</p>
<p> <strong>对了，HelloWorld！</strong></p>
<hr>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[什么是目标文件]]></title>
      <url>/2018/03/20/android/</url>
      <content type="html"><![CDATA[<blockquote>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3></blockquote>
<p>在学习elf文件格式的中他的头文件的时候，有关于目标文件的这个概念一直模棱两可，被弄得云里雾里的，今天在读《程序员自我修养》一书后，我对这个知识的理解有了初步的概念。那就写下来记录一下，目标文件是个啥。</p>
<blockquote>
<h3 id="代码处理过程"><a href="#代码处理过程" class="headerlink" title="代码处理过程"></a>代码处理过程</h3></blockquote>
<p>我要知道什么是目标文件，必须清楚，一份源代码是如何被计算机运行起来的，比如一个简单的打印helloworld程序，他到底是如何打印出来被我们看见的(我只大体说出他的流程，不考虑他的细节)。好，首先写一个简单的helloworld程序。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//test.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"hello world\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面是一段用c语言来写的程序，这份源代码，想要被计算机认识，执行需要经过如下4个过程：</p>
<p><img src="/images/progress.jpg" alt=""></p>
<h4 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h4><p>使用命令<code>gcc -E test.c -o test.i</code></p>
<p>1.在这个阶段，源代码中所有的<code>#define</code>会被删除，并且会展开所有的宏定义。</p>
<p>2.处理所有条件预编译指令，如：<code>#if,#ifdef,#else,#elif,#endif</code>。</p>
<p>3.处理<code>#include</code>预编译指令，将包含的文件插入到预编译指令的位置，过程递归，引用到的其他文件可能还会包含其他文件。</p>
<p>4.删除所有注释符号。</p>
<p>5.添加行号和文件标识，如<code># 2 &quot;test.c&quot; 2</code>，</p>
<p>6.保留所有<code>#pragma</code>编译器指令，编译器所需。</p>
<h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><p>使用命令<code>gcc -S test.i -o test.s</code></p>
<p>这个过程就是将预处理好的文件，进行词法分析，语法分析，语义分析，优化所生成的汇编代码文件。</p>
<h4 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h4><p>使用命令<code>gcc -c test.s -o test.o</code></p>
<p>在这个过程中，就是将汇编代码转换成机器可以识别的二进制的机器指令。</p>
<h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><p>大体上就是将所需要的各种文件链接起来形成可执行的最终文件。</p>
<blockquote>
<h3 id="目标文件是什么"><a href="#目标文件是什么" class="headerlink" title="目标文件是什么"></a>目标文件是什么</h3></blockquote>
<p>目标文件是源代码编译后未被链接的中间文件（linux系统上的.o文件），他与最终的可执行文件的文件结构十分相似，他就是Linux系统上的elf文件，elf文件格式具体分成4类：</p>
]]></content>
      
        <categories>
            
            <category> android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[so文件格式(一)]]></title>
      <url>/2018/03/16/android/</url>
      <content type="html"><![CDATA[<blockquote>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3></blockquote>
<p>关于so文件格式的分析，网上已经有很多，很好的文章了，本菜为了能加深对so文件格式的理解，于是就写此篇文章，来加深对于so文件格式的理解。</p>
<blockquote>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3></blockquote>
<p>对于so文件格式的分析我需要一个elf.h这个头文件</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _QEMU_ELF_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _QEMU_ELF_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;inttypes.h&gt;</span></span></span><br><span class="line"><span class="comment">/* 32-bit ELF base types. */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint32_t</span> Elf32_Addr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint16_t</span> Elf32_Half;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint32_t</span> Elf32_Off;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int32_t</span>  Elf32_Sword;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint32_t</span> Elf32_Word;</span><br><span class="line"><span class="comment">/* 64-bit ELF base types. */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint64_t</span> Elf64_Addr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint16_t</span> Elf64_Half;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int16_t</span>	 Elf64_SHalf;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint64_t</span> Elf64_Off;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int32_t</span>	 Elf64_Sword;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint32_t</span> Elf64_Word;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint64_t</span> Elf64_Xword;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int64_t</span>  Elf64_Sxword;</span><br><span class="line"><span class="comment">/* These constants are for the segment types stored in the image headers */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_NULL    0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_LOAD    1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_DYNAMIC 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_INTERP  3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_NOTE    4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_SHLIB   5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_PHDR    6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_LOPROC  0x70000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HIPROC  0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_MIPS_REGINFO	0x70000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_MIPS_OPTIONS	0x70000001</span></span><br><span class="line"><span class="comment">/* Flags in the e_flags field of the header */</span></span><br><span class="line"><span class="comment">/* MIPS architecture level. */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_1	0x00000000	<span class="comment">/* -mips1 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_2	0x10000000	<span class="comment">/* -mips2 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_3	0x20000000	<span class="comment">/* -mips3 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_4	0x30000000	<span class="comment">/* -mips4 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_5	0x40000000	<span class="comment">/* -mips5 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_32	0x50000000	<span class="comment">/* MIPS32 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_64	0x60000000	<span class="comment">/* MIPS64 code.  */</span></span></span><br><span class="line"><span class="comment">/* The ABI of a file. */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ABI_O32	0x00001000	<span class="comment">/* O32 ABI.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ABI_O64	0x00002000	<span class="comment">/* O32 extended for 64 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_NOREORDER 0x00000001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_PIC       0x00000002</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_CPIC      0x00000004</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ABI2	0x00000020</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_OPTIONS_FIRST	0x00000080</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_32BITMODE	0x00000100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ABI	0x0000f000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH      0xf0000000</span></span><br><span class="line"><span class="comment">/* These constants define the different elf file types */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_NONE   0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_REL    1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_EXEC   2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_DYN    3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_CORE   4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_LOPROC 0xff00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_HIPROC 0xffff</span></span><br><span class="line"><span class="comment">/* These constants define the various ELF target machines */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_NONE  0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_M32   1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SPARC 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_386   3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_68K   4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_88K   5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_486   6   <span class="comment">/* Perhaps disused */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_860   7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_MIPS	8	<span class="comment">/* MIPS R3000 (officially, big-endian only) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_MIPS_RS4_BE 10	<span class="comment">/* MIPS R4000 big-endian */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PARISC      15	<span class="comment">/* HPPA */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SPARC32PLUS 18	<span class="comment">/* Sun's "v8plus" */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PPC	       20	<span class="comment">/* PowerPC */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PPC64       21       <span class="comment">/* PowerPC64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ARM	40	<span class="comment">/* ARM */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SH	       42	<span class="comment">/* SuperH */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SPARCV9     43	<span class="comment">/* SPARC v9 64-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_IA_64	50	<span class="comment">/* HP/Intel IA-64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_X86_64	62	<span class="comment">/* AMD x86-64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_S390	22	<span class="comment">/* IBM S/390 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_CRIS         76      <span class="comment">/* Axis Communications 32-bit embedded processor */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_V850	87	<span class="comment">/* NEC v850 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_H8_300H      47      <span class="comment">/* Hitachi H8/300H */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_H8S          48      <span class="comment">/* Hitachi H8S     */</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * This is an interim value that we will use until the committee comes</span></span><br><span class="line"><span class="comment"> * up with a final number.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ALPHA	0x9026</span></span><br><span class="line"><span class="comment">/* Bogus old v850 magic number, used by old tools.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_CYGNUS_V850	0x9080</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * This is the old interim value for S/390 architecture</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_S390_OLD     0xA390</span></span><br><span class="line"><span class="comment">/* This is the info that is needed to parse the dynamic section of the file */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_NULL	0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_NEEDED	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTRELSZ	2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTGOT	3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_HASH	4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_STRTAB	5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMTAB	6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELA	7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELASZ	8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELAENT	9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_STRSZ	10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMENT	11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_INIT	12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_FINI	13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SONAME	14</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RPATH 	15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMBOLIC	16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_REL	        17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELSZ	18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELENT	19</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTREL	20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_DEBUG	21</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_TEXTREL	22</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_JMPREL	23</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_LOPROC	0x70000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_HIPROC	0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_RLD_VERSION	0x70000001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_TIME_STAMP	0x70000002</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_ICHECKSUM	0x70000003</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_IVERSION	0x70000004</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_FLAGS	0x70000005</span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">define</span> RHF_NONE	  0</span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">define</span> RHF_HARDWAY	  1</span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">define</span> RHF_NOTPOT	  2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_BASE_ADDRESS	0x70000006</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_CONFLICT	0x70000008</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_LIBLIST	0x70000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_LOCAL_GOTNO	0x7000000a</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_CONFLICTNO	0x7000000b</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_LIBLISTNO	0x70000010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_SYMTABNO	0x70000011</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_UNREFEXTNO	0x70000012</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_GOTSYM	0x70000013</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_HIPAGENO	0x70000014</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_RLD_MAP	0x70000016</span></span><br><span class="line"><span class="comment">/* This info is needed when parsing the symbol table */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_LOCAL  0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_GLOBAL 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_WEAK   2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_NOTYPE  0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_OBJECT  1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_FUNC    2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_SECTION 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_FILE    4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_ST_BIND(x)	((x) &gt;&gt; 4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_ST_TYPE(x)	(((unsigned int) x) &amp; 0xf)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_ST_BIND(x)	ELF_ST_BIND(x)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_ST_TYPE(x)	ELF_ST_TYPE(x)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_ST_BIND(x)	ELF_ST_BIND(x)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_ST_TYPE(x)	ELF_ST_TYPE(x)</span></span><br><span class="line"><span class="comment">/* Symbolic values for the entries in the auxiliary table</span></span><br><span class="line"><span class="comment">   put on the initial stack */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_NULL   0	<span class="comment">/* end of vector */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_IGNORE 1	<span class="comment">/* entry should be ignored */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_EXECFD 2	<span class="comment">/* file descriptor of program */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_PHDR   3	<span class="comment">/* program headers for program */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_PHENT  4	<span class="comment">/* size of program header entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_PHNUM  5	<span class="comment">/* number of program headers */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_PAGESZ 6	<span class="comment">/* system page size */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_BASE   7	<span class="comment">/* base address of interpreter */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_FLAGS  8	<span class="comment">/* flags */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_ENTRY  9	<span class="comment">/* entry point of program */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_NOTELF 10	<span class="comment">/* program is not ELF */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_UID    11	<span class="comment">/* real uid */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_EUID   12	<span class="comment">/* effective uid */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_GID    13	<span class="comment">/* real gid */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_EGID   14	<span class="comment">/* effective gid */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_PLATFORM 15  <span class="comment">/* string identifying CPU for optimizations */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_HWCAP  16    <span class="comment">/* arch dependent hints at CPU capabilities */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT_CLKTCK 17	<span class="comment">/* frequency at which times() increments */</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">dynamic</span>&#123;</span></span><br><span class="line">  Elf32_Sword d_tag;</span><br><span class="line">  <span class="keyword">union</span>&#123;</span><br><span class="line">    Elf32_Sword	d_val;</span><br><span class="line">    Elf32_Addr	d_ptr;</span><br><span class="line">  &#125; d_un;</span><br><span class="line">&#125; Elf32_Dyn;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">  Elf64_Sxword d_tag;	<span class="comment">/* entry tag value */</span></span><br><span class="line">  <span class="keyword">union</span> &#123;</span><br><span class="line">    Elf64_Xword d_val;</span><br><span class="line">    Elf64_Addr d_ptr;</span><br><span class="line">  &#125; d_un;</span><br><span class="line">&#125; Elf64_Dyn;</span><br><span class="line"><span class="comment">/* The following are used with relocations */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_R_SYM(x) ((x) &gt;&gt; 8)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_R_TYPE(x) ((x) &amp; 0xff)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_R_SYM(i)	((i) &gt;&gt; 32)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_R_TYPE(i)	((i) &amp; 0xffffffff)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_R_TYPE_DATA(i)            (((ELF64_R_TYPE(i) &gt;&gt; 8) ^ 0x00800000) - 0x00800000)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_NONE	0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_32	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_PC32	2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_GOT32	3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_PLT32	4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_COPY	5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_GLOB_DAT	6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_JMP_SLOT	7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_RELATIVE	8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_GOTOFF	9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_GOTPC	10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_NUM	11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_NONE	0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_16	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_32	2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_REL32	3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_26	4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_HI16	5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_LO16	6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GPREL16	7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_LITERAL	8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GOT16	9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_PC16	10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_CALL16	11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GPREL32	12</span></span><br><span class="line"><span class="comment">/* The remaining relocs are defined on Irix, although they are not</span></span><br><span class="line"><span class="comment">   in the MIPS ELF ABI.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_UNUSED1	13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_UNUSED2	14</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_UNUSED3	15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_SHIFT5	16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_SHIFT6	17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_64	18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GOT_DISP	19</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GOT_PAGE	20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GOT_OFST	21</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * The following two relocation types are specified in the MIPS ABI</span></span><br><span class="line"><span class="comment"> * conformance guide version 1.2 but not yet in the psABI.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GOTHI16	22</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GOTLO16	23</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_SUB	24</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_INSERT_A	25</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_INSERT_B	26</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_DELETE	27</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_HIGHER	28</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_HIGHEST	29</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * The following two relocation types are specified in the MIPS ABI</span></span><br><span class="line"><span class="comment"> * conformance guide version 1.2 but not yet in the psABI.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_CALLHI16	30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_CALLLO16	31</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * This range is reserved for vendor specific relocations.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_LOVENDOR	100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_HIVENDOR	127</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Sparc ELF relocation types</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_NONE	0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_8	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_16	2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_32	3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_DISP8	4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_DISP16	5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_DISP32	6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_WDISP30	7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_WDISP22	8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_HI22	9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_22	10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_13	11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_LO10	12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_GOT10	13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_GOT13	14</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_GOT22	15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_PC10	16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_PC22	17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_WPLT30	18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_COPY	19</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_GLOB_DAT	20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_JMP_SLOT	21</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_RELATIVE	22</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SPARC_UA32	23</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PLT32	24</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_HIPLT22	25</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_LOPLT10	26</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PCPLT32	27</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PCPLT22	28</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PCPLT10	29</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_10	30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_11	31</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_64	32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_OLO10           33</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_HH22            34</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_HM10            35</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_LM22            36</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_WDISP16	40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_WDISP19	41</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_7	43</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_5	44</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_6	45</span></span><br><span class="line"><span class="comment">/* Bits present in AT_HWCAP, primarily for Sparc32.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HWCAP_SPARC_FLUSH       1    <span class="comment">/* CPU supports flush instruction. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HWCAP_SPARC_STBAR       2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HWCAP_SPARC_SWAP        4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HWCAP_SPARC_MULDIV      8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HWCAP_SPARC_V9	16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HWCAP_SPARC_ULTRA3	32</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 68k ELF relocation types</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_NONE	0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_32	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_16	2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_8	3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PC32	4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PC16	5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PC8	6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GOT32	7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GOT16	8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GOT8	9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GOT32O	10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GOT16O	11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GOT8O	12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PLT32	13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PLT16	14</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PLT8	15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PLT32O	16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PLT16O	17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PLT8O	18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_COPY	19</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GLOB_DAT	20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_JMP_SLOT	21</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_RELATIVE	22</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Alpha ELF relocation types</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_NONE            0       <span class="comment">/* No reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_REFLONG         1       <span class="comment">/* Direct 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_REFQUAD         2       <span class="comment">/* Direct 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GPREL32         3       <span class="comment">/* GP relative 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_LITERAL         4       <span class="comment">/* GP relative 16 bit w/optimization */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_LITUSE          5       <span class="comment">/* Optimization hint for LITERAL */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GPDISP          6       <span class="comment">/* Add displacement to GP */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_BRADDR          7       <span class="comment">/* PC+4 relative 23 bit shifted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_HINT            8       <span class="comment">/* PC+4 relative 16 bit shifted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_SREL16          9       <span class="comment">/* PC relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_SREL32          10      <span class="comment">/* PC relative 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_SREL64          11      <span class="comment">/* PC relative 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GPRELHIGH       17      <span class="comment">/* GP relative 32 bit, high 16 bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GPRELLOW        18      <span class="comment">/* GP relative 32 bit, low 16 bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GPREL16         19      <span class="comment">/* GP relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_COPY            24      <span class="comment">/* Copy symbol at runtime */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GLOB_DAT        25      <span class="comment">/* Create GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_JMP_SLOT        26      <span class="comment">/* Create PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_RELATIVE        27      <span class="comment">/* Adjust by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_BRSGP	28</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TLSGD           29</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TLS_LDM         30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_DTPMOD64        31</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GOTDTPREL       32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_DTPREL64        33</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_DTPRELHI        34</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_DTPRELLO        35</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_DTPREL16        36</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GOTTPREL        37</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TPREL64         38</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TPRELHI         39</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TPRELLO         40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TPREL16         41</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_ALPHA_GPREL	0x10000000</span></span><br><span class="line"><span class="comment">/* PowerPC relocations defined by the ABIs */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_NONE	0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR32	1	<span class="comment">/* 32bit absolute address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR24	2	<span class="comment">/* 26bit address, 2 bits ignored.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR16	3	<span class="comment">/* 16bit absolute address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR16_LO	4	<span class="comment">/* lower 16bit of absolute address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR16_HI	5	<span class="comment">/* high 16bit of absolute address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR16_HA	6	<span class="comment">/* adjusted high 16bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR14	7	<span class="comment">/* 16bit address, 2 bits ignored */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR14_BRTAKEN	8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR14_BRNTAKEN	9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL24	10	<span class="comment">/* PC relative 26 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL14	11	<span class="comment">/* PC relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL14_BRTAKEN	12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL14_BRNTAKEN	13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT16	14</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT16_LO	15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT16_HI	16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT16_HA	17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_PLTREL24	18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_COPY	19</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GLOB_DAT	20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_JMP_SLOT	21</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_RELATIVE	22</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_LOCAL24PC	23</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_UADDR32	24</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_UADDR16	25</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL32	26</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_PLT32	27</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_PLTREL32	28</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_PLT16_LO	29</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_PLT16_HI	30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_PLT16_HA	31</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_SDAREL16	32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_SECTOFF	33</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_SECTOFF_LO	34</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_SECTOFF_HI	35</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_SECTOFF_HA	36</span></span><br><span class="line"><span class="comment">/* Keep this the last entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_NUM	37</span></span><br><span class="line"><span class="comment">/* ARM specific declarations */</span></span><br><span class="line"><span class="comment">/* Processor specific flags for the ELF header e_flags field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_RELEXEC     0x01</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_HASENTRY    0x02</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_INTERWORK   0x04</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_APCS_26     0x08</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_APCS_FLOAT  0x10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_PIC         0x20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ALIGN8          0x40	<span class="comment">/* 8-bit structure alignment is in use */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_NEW_ABI         0x80</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_OLD_ABI         0x100</span></span><br><span class="line"><span class="comment">/* Additional symbol types for Thumb */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_ARM_TFUNC      0xd</span></span><br><span class="line"><span class="comment">/* ARM-specific values for sh_flags */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_ARM_ENTRYSECT  0x10000000   <span class="comment">/* Section contains an entry point */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_ARM_COMDEF     0x80000000   <span class="comment">/* Section may be multiply defined</span></span></span><br><span class="line"><span class="meta"><span class="comment">   in the input to a link step */</span></span></span><br><span class="line"><span class="comment">/* ARM-specific program header flags */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_ARM_SB          0x10000000   <span class="comment">/* Segment contains the location</span></span></span><br><span class="line"><span class="meta"><span class="comment">   addressed by the static base */</span></span></span><br><span class="line"><span class="comment">/* ARM relocs.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_NONE	0	<span class="comment">/* No reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_PC24	1	<span class="comment">/* PC relative 26 bit branch */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ABS32	2	<span class="comment">/* Direct 32 bit  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_REL32	3	<span class="comment">/* PC relative 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_PC13	4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ABS16	5	<span class="comment">/* Direct 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ABS12	6	<span class="comment">/* Direct 12 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_ABS5	7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ABS8	8	<span class="comment">/* Direct 8 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_SBREL32	9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_PC22	10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_PC8	11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_AMP_VCALL9	12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_SWI24	13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_SWI8	14</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_XPC25	15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_XPC22	16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_COPY	20	<span class="comment">/* Copy symbol at runtime */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GLOB_DAT	21	<span class="comment">/* Create GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_JUMP_SLOT	22	<span class="comment">/* Create PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RELATIVE	23	<span class="comment">/* Adjust by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GOTOFF	24	<span class="comment">/* 32 bit offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GOTPC	25	<span class="comment">/* 32 bit PC relative offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GOT32	26	<span class="comment">/* 32 bit GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_PLT32	27	<span class="comment">/* 32 bit PLT address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_CALL              28</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_JUMP24            29</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GNU_VTENTRY	100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GNU_VTINHERIT	101</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_PC11	102	<span class="comment">/* thumb unconditional branch */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_PC9	103	<span class="comment">/* thumb conditional branch */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RXPC25	249</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RSBREL32	250</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_RPC22	251</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RREL32	252</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RABS22	253</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RPC24	254</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RBASE	255</span></span><br><span class="line"><span class="comment">/* Keep this the last entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_NUM	256</span></span><br><span class="line"><span class="comment">/* s390 relocations defined by the ABIs */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_NONE	0	<span class="comment">/* No reloc.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_8	1	<span class="comment">/* Direct 8 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_12	2	<span class="comment">/* Direct 12 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_16	3	<span class="comment">/* Direct 16 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_32	4	<span class="comment">/* Direct 32 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PC32	5	<span class="comment">/* PC relative 32 bit.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOT12	6	<span class="comment">/* 12 bit GOT offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOT32	7	<span class="comment">/* 32 bit GOT offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLT32	8	<span class="comment">/* 32 bit PC relative PLT address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_COPY	9	<span class="comment">/* Copy symbol at runtime.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GLOB_DAT	10	<span class="comment">/* Create GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_JMP_SLOT	11	<span class="comment">/* Create PLT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_RELATIVE	12	<span class="comment">/* Adjust by program base.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTOFF32	13	<span class="comment">/* 32 bit offset to GOT.	 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPC	14	<span class="comment">/* 32 bit PC rel. offset to GOT.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOT16	15	<span class="comment">/* 16 bit GOT offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PC16	16	<span class="comment">/* PC relative 16 bit.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PC16DBL	17	<span class="comment">/* PC relative 16 bit shifted by 1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLT16DBL	18	<span class="comment">/* 16 bit PC rel. PLT shifted by 1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PC32DBL	19	<span class="comment">/* PC relative 32 bit shifted by 1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLT32DBL	20	<span class="comment">/* 32 bit PC rel. PLT shifted by 1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPCDBL	21	<span class="comment">/* 32 bit PC rel. GOT shifted by 1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_64	22	<span class="comment">/* Direct 64 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PC64	23	<span class="comment">/* PC relative 64 bit.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOT64	24	<span class="comment">/* 64 bit GOT offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLT64	25	<span class="comment">/* 64 bit PC relative PLT address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTENT	26	<span class="comment">/* 32 bit PC rel. to GOT entry &gt;&gt; 1. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTOFF16	27	<span class="comment">/* 16 bit offset to GOT. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTOFF64	28	<span class="comment">/* 64 bit offset to GOT. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPLT12	29	<span class="comment">/* 12 bit offset to jump slot.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPLT16	30	<span class="comment">/* 16 bit offset to jump slot.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPLT32	31	<span class="comment">/* 32 bit offset to jump slot.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPLT64	32	<span class="comment">/* 64 bit offset to jump slot.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPLTENT	33	<span class="comment">/* 32 bit rel. offset to jump slot.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLTOFF16	34	<span class="comment">/* 16 bit offset from GOT to PLT. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLTOFF32	35	<span class="comment">/* 32 bit offset from GOT to PLT. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLTOFF64	36	<span class="comment">/* 16 bit offset from GOT to PLT. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LOAD	37	<span class="comment">/* Tag for load insn in TLS code. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GDCALL	38	<span class="comment">/* Tag for function call in general</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           dynamic TLS code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LDCALL	39	<span class="comment">/* Tag for function call in local</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           dynamic TLS code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GD32	40	<span class="comment">/* Direct 32 bit for general dynamic</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           thread local data.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GD64	41	<span class="comment">/* Direct 64 bit for general dynamic</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           thread local data.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GOTIE12	42	<span class="comment">/* 12 bit GOT offset for static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           block offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GOTIE32	43	<span class="comment">/* 32 bit GOT offset for static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           block offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GOTIE64	44	<span class="comment">/* 64 bit GOT offset for static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           block offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LDM32	45	<span class="comment">/* Direct 32 bit for local dynamic</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           thread local data in LD code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LDM64	46	<span class="comment">/* Direct 64 bit for local dynamic</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           thread local data in LD code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_IE32	47	<span class="comment">/* 32 bit address of GOT entry for</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           negated static TLS block offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_IE64	48	<span class="comment">/* 64 bit address of GOT entry for</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           negated static TLS block offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_IEENT	49	<span class="comment">/* 32 bit rel. offset to GOT entry for</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           negated static TLS block offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LE32	50	<span class="comment">/* 32 bit negated offset relative to</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           static TLS block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LE64	51	<span class="comment">/* 64 bit negated offset relative to</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           static TLS block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LDO32	52	<span class="comment">/* 32 bit offset relative to TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LDO64	53	<span class="comment">/* 64 bit offset relative to TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_DTPMOD	54	<span class="comment">/* ID of module containing symbol.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_DTPOFF	55	<span class="comment">/* Offset in TLS block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_TPOFF	56	<span class="comment">/* Negate offset in static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">                                           block.  */</span></span></span><br><span class="line"><span class="comment">/* Keep this the last entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_NUM	57</span></span><br><span class="line"><span class="comment">/* x86-64 relocation types */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_NONE	0	<span class="comment">/* No reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_64	1	<span class="comment">/* Direct 64 bit  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_PC32	2	<span class="comment">/* PC relative 32 bit signed */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GOT32	3	<span class="comment">/* 32 bit GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_PLT32	4	<span class="comment">/* 32 bit PLT address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_COPY	5	<span class="comment">/* Copy symbol at runtime */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GLOB_DAT	6	<span class="comment">/* Create GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_JUMP_SLOT	7	<span class="comment">/* Create PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_RELATIVE	8	<span class="comment">/* Adjust by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GOTPCREL	9	<span class="comment">/* 32 bit signed pc relative</span></span></span><br><span class="line"><span class="meta"><span class="comment">   offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_32	10	<span class="comment">/* Direct 32 bit zero extended */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_32S	11	<span class="comment">/* Direct 32 bit sign extended */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_16	12	<span class="comment">/* Direct 16 bit zero extended */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_PC16	13	<span class="comment">/* 16 bit sign extended pc relative */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_8	14	<span class="comment">/* Direct 8 bit sign extended  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_PC8	15	<span class="comment">/* 8 bit sign extended pc relative */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_NUM	16</span></span><br><span class="line"><span class="comment">/* Legal values for e_flags field of Elf64_Ehdr.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ALPHA_32BIT	1	<span class="comment">/* All addresses are below 2GB */</span></span></span><br><span class="line"><span class="comment">/* HPPA specific definitions.  */</span></span><br><span class="line"><span class="comment">/* Legal values for e_flags field of Elf32_Ehdr.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_TRAPNIL	0x00010000 <span class="comment">/* Trap nil pointer dereference.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_EXT	0x00020000 <span class="comment">/* Program uses arch. extensions. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_LSB	0x00040000 <span class="comment">/* Program expects little endian. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_WIDE	0x00080000 <span class="comment">/* Program expects wide mode.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_NO_KABP	0x00100000 <span class="comment">/* No kernel assisted branch</span></span></span><br><span class="line"><span class="meta"><span class="comment">      prediction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_LAZYSWAP	0x00400000 <span class="comment">/* Allow lazy swapping.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_ARCH	0x0000ffff <span class="comment">/* Architecture version.  */</span></span></span><br><span class="line"><span class="comment">/* Defined values for `e_flags &amp; EF_PARISC_ARCH' are:  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EFA_PARISC_1_0	    0x020b <span class="comment">/* PA-RISC 1.0 big-endian.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EFA_PARISC_1_1	    0x0210 <span class="comment">/* PA-RISC 1.1 big-endian.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EFA_PARISC_2_0	    0x0214 <span class="comment">/* PA-RISC 2.0 big-endian.  */</span></span></span><br><span class="line"><span class="comment">/* Additional section indeces.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_PARISC_ANSI_COMMON	0xff00	   <span class="comment">/* Section for tenatively declared</span></span></span><br><span class="line"><span class="meta"><span class="comment">      symbols in ANSI C.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_PARISC_HUGE_COMMON	0xff01	   <span class="comment">/* Common blocks in huge model.  */</span></span></span><br><span class="line"><span class="comment">/* Legal values for sh_type field of Elf32_Shdr.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_PARISC_EXT	0x70000000 <span class="comment">/* Contains product specific ext. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_PARISC_UNWIND	0x70000001 <span class="comment">/* Unwind information.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_PARISC_DOC	0x70000002 <span class="comment">/* Debug info for optimized code. */</span></span></span><br><span class="line"><span class="comment">/* Legal values for sh_flags field of Elf32_Shdr.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_PARISC_SHORT	0x20000000 <span class="comment">/* Section with short addressing. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_PARISC_HUGE	0x40000000 <span class="comment">/* Section far from gp.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_PARISC_SBP	0x80000000 <span class="comment">/* Static branch prediction code. */</span></span></span><br><span class="line"><span class="comment">/* Legal values for ST_TYPE subfield of st_info (symbol type).  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_PARISC_MILLICODE	13	<span class="comment">/* Millicode function entry point.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_HP_OPAQUE	(STT_LOOS + 0x1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_HP_STUB	(STT_LOOS + 0x2)</span></span><br><span class="line"><span class="comment">/* HPPA relocs.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_NONE	0	<span class="comment">/* No reloc.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR32	1	<span class="comment">/* Direct 32-bit reference.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR21L	2	<span class="comment">/* Left 21 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR17R	3	<span class="comment">/* Right 17 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR17F	4	<span class="comment">/* 17 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR14R	6	<span class="comment">/* Right 14 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL32	9	<span class="comment">/* 32-bit rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL21L	10	<span class="comment">/* Left 21 bits of rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL17R	11	<span class="comment">/* Right 17 bits of rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL17F	12	<span class="comment">/* 17 bits of rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL14R	14	<span class="comment">/* Right 14 bits of rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DPREL21L	18	<span class="comment">/* Left 21 bits of rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DPREL14R	22	<span class="comment">/* Right 14 bits of rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL21L	26	<span class="comment">/* GP-relative, left 21 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL14R	30	<span class="comment">/* GP-relative, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF21L	34	<span class="comment">/* LT-relative, left 21 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF14R	38	<span class="comment">/* LT-relative, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_SECREL32	41	<span class="comment">/* 32 bits section rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_SEGBASE	48	<span class="comment">/* No relocation, set segment base.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_SEGREL32	49	<span class="comment">/* 32 bits segment rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF21L	50	<span class="comment">/* PLT rel. address, left 21 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF14R	54	<span class="comment">/* PLT rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR32	57	<span class="comment">/* 32 bits LT-rel. function pointer. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR21L	58	<span class="comment">/* LT-rel. fct ptr, left 21 bits. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR14R	62	<span class="comment">/* LT-rel. fct ptr, right 14 bits. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_FPTR64	64	<span class="comment">/* 64 bits function address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLABEL32	65	<span class="comment">/* 32 bits function address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL64	72	<span class="comment">/* 64 bits PC-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL22F	74	<span class="comment">/* 22 bits PC-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL14WR	75	<span class="comment">/* PC-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL14DR	76	<span class="comment">/* PC rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL16F	77	<span class="comment">/* 16 bits PC-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL16WF	78	<span class="comment">/* 16 bits PC-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL16DF	79	<span class="comment">/* 16 bits PC-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR64	80	<span class="comment">/* 64 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR14WR	83	<span class="comment">/* 14 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR14DR	84	<span class="comment">/* 14 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR16F	85	<span class="comment">/* 16 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR16WF	86	<span class="comment">/* 16 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR16DF	87	<span class="comment">/* 16 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL64	88	<span class="comment">/* 64 bits of GP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL14WR	91	<span class="comment">/* GP-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL14DR	92	<span class="comment">/* GP-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL16F	93	<span class="comment">/* 16 bits GP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL16WF	94	<span class="comment">/* 16 bits GP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL16DF	95	<span class="comment">/* 16 bits GP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF64	96	<span class="comment">/* 64 bits LT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF14WR	99	<span class="comment">/* LT-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF14DR	100	<span class="comment">/* LT-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF16F	101	<span class="comment">/* 16 bits LT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF16WF	102	<span class="comment">/* 16 bits LT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF16DF	103	<span class="comment">/* 16 bits LT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_SECREL64	104	<span class="comment">/* 64 bits section rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_SEGREL64	112	<span class="comment">/* 64 bits segment rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF14WR	115	<span class="comment">/* PLT-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF14DR	116	<span class="comment">/* PLT-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF16F	117	<span class="comment">/* 16 bits LT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF16WF	118	<span class="comment">/* 16 bits PLT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF16DF	119	<span class="comment">/* 16 bits PLT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR64	120	<span class="comment">/* 64 bits LT-rel. function ptr.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR14WR	123	<span class="comment">/* LT-rel. fct. ptr., right 14 bits. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR14DR	124	<span class="comment">/* LT-rel. fct. ptr., right 14 bits. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR16F	125	<span class="comment">/* 16 bits LT-rel. function ptr.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR16WF	126	<span class="comment">/* 16 bits LT-rel. function ptr.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR16DF	127	<span class="comment">/* 16 bits LT-rel. function ptr.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LORESERVE	128</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_COPY	128	<span class="comment">/* Copy relocation.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_IPLT	129	<span class="comment">/* Dynamic reloc, imported PLT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_EPLT	130	<span class="comment">/* Dynamic reloc, exported PLT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL32	153	<span class="comment">/* 32 bits TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL21L	154	<span class="comment">/* TP-rel. address, left 21 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL14R	158	<span class="comment">/* TP-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP21L	162	<span class="comment">/* LT-TP-rel. address, left 21 bits. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP14R	166	<span class="comment">/* LT-TP-rel. address, right 14 bits.*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP14F	167	<span class="comment">/* 14 bits LT-TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL64	216	<span class="comment">/* 64 bits TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL14WR	219	<span class="comment">/* TP-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL14DR	220	<span class="comment">/* TP-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL16F	221	<span class="comment">/* 16 bits TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL16WF	222	<span class="comment">/* 16 bits TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL16DF	223	<span class="comment">/* 16 bits TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP64	224	<span class="comment">/* 64 bits LT-TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP14WR	227	<span class="comment">/* LT-TP-rel. address, right 14 bits.*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP14DR	228	<span class="comment">/* LT-TP-rel. address, right 14 bits.*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP16F	229	<span class="comment">/* 16 bits LT-TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP16WF	230	<span class="comment">/* 16 bits LT-TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP16DF	231	<span class="comment">/* 16 bits LT-TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_HIRESERVE	255</span></span><br><span class="line"><span class="comment">/* Legal values for p_type field of Elf32_Phdr/Elf64_Phdr.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_TLS	(PT_LOOS + 0x0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_NONE	(PT_LOOS + 0x1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_VERSION	(PT_LOOS + 0x2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_KERNEL	(PT_LOOS + 0x3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_COMM	(PT_LOOS + 0x4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_PROC	(PT_LOOS + 0x5)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_LOADABLE	(PT_LOOS + 0x6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_STACK	(PT_LOOS + 0x7)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_SHM	(PT_LOOS + 0x8)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_MMF	(PT_LOOS + 0x9)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_PARALLEL	(PT_LOOS + 0x10)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_FASTBIND	(PT_LOOS + 0x11)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_OPT_ANNOT	(PT_LOOS + 0x12)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_HSL_ANNOT	(PT_LOOS + 0x13)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_STACK	(PT_LOOS + 0x14)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_PARISC_ARCHEXT	0x70000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_PARISC_UNWIND	0x70000001</span></span><br><span class="line"><span class="comment">/* Legal values for p_flags field of Elf32_Phdr/Elf64_Phdr.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_PARISC_SBP	0x08000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_PAGE_SIZE	0x00100000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_FAR_SHARED	0x00200000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_NEAR_SHARED	0x00400000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_CODE	0x01000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_MODIFY	0x02000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_LAZYSWAP	0x04000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_SBP	0x08000000</span></span><br><span class="line"><span class="comment">/* IA-64 specific declarations.  */</span></span><br><span class="line"><span class="comment">/* Processor specific flags for the Ehdr e_flags field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_IA_64_MASKOS	0x0000000f	<span class="comment">/* os-specific flags */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_IA_64_ABI64	0x00000010	<span class="comment">/* 64-bit ABI */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_IA_64_ARCH	0xff000000	<span class="comment">/* arch. version mask */</span></span></span><br><span class="line"><span class="comment">/* Processor specific values for the Phdr p_type field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_IA_64_ARCHEXT	(PT_LOPROC + 0)	<span class="comment">/* arch extension bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_IA_64_UNWIND	(PT_LOPROC + 1)	<span class="comment">/* ia64 unwind bits */</span></span></span><br><span class="line"><span class="comment">/* Processor specific flags for the Phdr p_flags field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_IA_64_NORECOV	0x80000000	<span class="comment">/* spec insns w/o recovery */</span></span></span><br><span class="line"><span class="comment">/* Processor specific values for the Shdr sh_type field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_IA_64_EXT	(SHT_LOPROC + 0) <span class="comment">/* extension bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_IA_64_UNWIND	(SHT_LOPROC + 1) <span class="comment">/* unwind bits */</span></span></span><br><span class="line"><span class="comment">/* Processor specific flags for the Shdr sh_flags field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_IA_64_SHORT	0x10000000	<span class="comment">/* section near gp */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_IA_64_NORECOV	0x20000000	<span class="comment">/* spec insns w/o recovery */</span></span></span><br><span class="line"><span class="comment">/* Processor specific values for the Dyn d_tag field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_IA_64_PLT_RESERVE	(DT_LOPROC + 0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_IA_64_NUM	1</span></span><br><span class="line"><span class="comment">/* IA-64 relocations.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_NONE	0x00	<span class="comment">/* none */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_IMM14	0x21	<span class="comment">/* symbol + addend, add imm14 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_IMM22	0x22	<span class="comment">/* symbol + addend, add imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_IMM64	0x23	<span class="comment">/* symbol + addend, mov imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DIR32MSB	0x24	<span class="comment">/* symbol + addend, data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DIR32LSB	0x25	<span class="comment">/* symbol + addend, data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DIR64MSB	0x26	<span class="comment">/* symbol + addend, data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DIR64LSB	0x27	<span class="comment">/* symbol + addend, data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_GPREL22	0x2a	<span class="comment">/* @gprel(sym + add), add imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_GPREL64I	0x2b	<span class="comment">/* @gprel(sym + add), mov imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_GPREL32MSB	0x2c	<span class="comment">/* @gprel(sym + add), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_GPREL32LSB	0x2d	<span class="comment">/* @gprel(sym + add), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_GPREL64MSB	0x2e	<span class="comment">/* @gprel(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_GPREL64LSB	0x2f	<span class="comment">/* @gprel(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF22	0x32	<span class="comment">/* @ltoff(sym + add), add imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF64I	0x33	<span class="comment">/* @ltoff(sym + add), mov imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PLTOFF22	0x3a	<span class="comment">/* @pltoff(sym + add), add imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PLTOFF64I	0x3b	<span class="comment">/* @pltoff(sym + add), mov imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PLTOFF64MSB	0x3e	<span class="comment">/* @pltoff(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PLTOFF64LSB	0x3f	<span class="comment">/* @pltoff(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_FPTR64I	0x43	<span class="comment">/* @fptr(sym + add), mov imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_FPTR32MSB	0x44	<span class="comment">/* @fptr(sym + add), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_FPTR32LSB	0x45	<span class="comment">/* @fptr(sym + add), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_FPTR64MSB	0x46	<span class="comment">/* @fptr(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_FPTR64LSB	0x47	<span class="comment">/* @fptr(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL60B	0x48	<span class="comment">/* @pcrel(sym + add), brl */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL21B	0x49	<span class="comment">/* @pcrel(sym + add), ptb, call */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL21M	0x4a	<span class="comment">/* @pcrel(sym + add), chk.s */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL21F	0x4b	<span class="comment">/* @pcrel(sym + add), fchkf */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL32MSB	0x4c	<span class="comment">/* @pcrel(sym + add), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL32LSB	0x4d	<span class="comment">/* @pcrel(sym + add), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL64MSB	0x4e	<span class="comment">/* @pcrel(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL64LSB	0x4f	<span class="comment">/* @pcrel(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_FPTR22	0x52	<span class="comment">/* @ltoff(@fptr(s+a)), imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_FPTR64I	0x53	<span class="comment">/* @ltoff(@fptr(s+a)), imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_FPTR32MSB	0x54	<span class="comment">/* @ltoff(@fptr(s+a)), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_FPTR32LSB	0x55	<span class="comment">/* @ltoff(@fptr(s+a)), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_FPTR64MSB	0x56	<span class="comment">/* @ltoff(@fptr(s+a)), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_FPTR64LSB	0x57	<span class="comment">/* @ltoff(@fptr(s+a)), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SEGREL32MSB	0x5c	<span class="comment">/* @segrel(sym + add), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SEGREL32LSB	0x5d	<span class="comment">/* @segrel(sym + add), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SEGREL64MSB	0x5e	<span class="comment">/* @segrel(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SEGREL64LSB	0x5f	<span class="comment">/* @segrel(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SECREL32MSB	0x64	<span class="comment">/* @secrel(sym + add), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SECREL32LSB	0x65	<span class="comment">/* @secrel(sym + add), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SECREL64MSB	0x66	<span class="comment">/* @secrel(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SECREL64LSB	0x67	<span class="comment">/* @secrel(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_REL32MSB	0x6c	<span class="comment">/* data 4 + REL */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_REL32LSB	0x6d	<span class="comment">/* data 4 + REL */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_REL64MSB	0x6e	<span class="comment">/* data 8 + REL */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_REL64LSB	0x6f	<span class="comment">/* data 8 + REL */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTV32MSB	0x74	<span class="comment">/* symbol + addend, data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTV32LSB	0x75	<span class="comment">/* symbol + addend, data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTV64MSB	0x76	<span class="comment">/* symbol + addend, data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTV64LSB	0x77	<span class="comment">/* symbol + addend, data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL21BI	0x79	<span class="comment">/* @pcrel(sym + add), 21bit inst */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL22	0x7a	<span class="comment">/* @pcrel(sym + add), 22bit inst */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL64I	0x7b	<span class="comment">/* @pcrel(sym + add), 64bit inst */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_IPLTMSB	0x80	<span class="comment">/* dynamic reloc, imported PLT, MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_IPLTLSB	0x81	<span class="comment">/* dynamic reloc, imported PLT, LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_COPY	0x84	<span class="comment">/* copy relocation */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SUB	0x85	<span class="comment">/* Addend and symbol difference */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF22X	0x86	<span class="comment">/* LTOFF22, relaxable.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LDXMOV	0x87	<span class="comment">/* Use of LTOFF22X.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_TPREL14	0x91	<span class="comment">/* @tprel(sym + add), imm14 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_TPREL22	0x92	<span class="comment">/* @tprel(sym + add), imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_TPREL64I	0x93	<span class="comment">/* @tprel(sym + add), imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_TPREL64MSB	0x96	<span class="comment">/* @tprel(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_TPREL64LSB	0x97	<span class="comment">/* @tprel(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_TPREL22	0x9a	<span class="comment">/* @ltoff(@tprel(s+a)), imm2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPMOD64MSB	0xa6	<span class="comment">/* @dtpmod(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPMOD64LSB	0xa7	<span class="comment">/* @dtpmod(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_DTPMOD22	0xaa	<span class="comment">/* @ltoff(@dtpmod(sym + add)), imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL14	0xb1	<span class="comment">/* @dtprel(sym + add), imm14 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL22	0xb2	<span class="comment">/* @dtprel(sym + add), imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL64I	0xb3	<span class="comment">/* @dtprel(sym + add), imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL32MSB	0xb4	<span class="comment">/* @dtprel(sym + add), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL32LSB	0xb5	<span class="comment">/* @dtprel(sym + add), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL64MSB	0xb6	<span class="comment">/* @dtprel(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL64LSB	0xb7	<span class="comment">/* @dtprel(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_DTPREL22	0xba	<span class="comment">/* @ltoff(@dtprel(s+a)), imm22 */</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_rel</span> &#123;</span></span><br><span class="line">  Elf32_Addr	r_offset;</span><br><span class="line">  Elf32_Word	r_info;</span><br><span class="line">&#125; Elf32_Rel;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_rel</span> &#123;</span></span><br><span class="line">  Elf64_Addr r_offset;	<span class="comment">/* Location at which to apply the action */</span></span><br><span class="line">  Elf64_Xword r_info;	<span class="comment">/* index and type of relocation */</span></span><br><span class="line">&#125; Elf64_Rel;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_rela</span>&#123;</span></span><br><span class="line">  Elf32_Addr	r_offset;</span><br><span class="line">  Elf32_Word	r_info;</span><br><span class="line">  Elf32_Sword	r_addend;</span><br><span class="line">&#125; Elf32_Rela;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_rela</span> &#123;</span></span><br><span class="line">  Elf64_Addr r_offset;	<span class="comment">/* Location at which to apply the action */</span></span><br><span class="line">  Elf64_Xword r_info;	<span class="comment">/* index and type of relocation */</span></span><br><span class="line">  Elf64_Sxword r_addend;	<span class="comment">/* Constant addend used to compute value */</span></span><br><span class="line">&#125; Elf64_Rela;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_sym</span>&#123;</span></span><br><span class="line">  Elf32_Word	st_name;</span><br><span class="line">  Elf32_Addr	st_value;</span><br><span class="line">  Elf32_Word	st_size;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>	st_info;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>	st_other;</span><br><span class="line">  Elf32_Half	st_shndx;</span><br><span class="line">&#125; Elf32_Sym;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_sym</span> &#123;</span></span><br><span class="line">  Elf64_Word st_name;	<span class="comment">/* Symbol name, index in string tbl */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>	st_info;	<span class="comment">/* Type and binding attributes */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>	st_other;	<span class="comment">/* No defined meaning, 0 */</span></span><br><span class="line">  Elf64_Half st_shndx;	<span class="comment">/* Associated section index */</span></span><br><span class="line">  Elf64_Addr st_value;	<span class="comment">/* Value of the symbol */</span></span><br><span class="line">  Elf64_Xword st_size;	<span class="comment">/* Associated symbol size */</span></span><br><span class="line">&#125; Elf64_Sym;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_NIDENT	16</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_hdr</span>&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>	e_ident[EI_NIDENT];</span><br><span class="line">  Elf32_Half	e_type;</span><br><span class="line">  Elf32_Half	e_machine;</span><br><span class="line">  Elf32_Word	e_version;</span><br><span class="line">  Elf32_Addr	e_entry;  <span class="comment">/* Entry point */</span></span><br><span class="line">  Elf32_Off	e_phoff;</span><br><span class="line">  Elf32_Off	e_shoff;</span><br><span class="line">  Elf32_Word	e_flags;</span><br><span class="line">  Elf32_Half	e_ehsize;</span><br><span class="line">  Elf32_Half	e_phentsize;</span><br><span class="line">  Elf32_Half	e_phnum;</span><br><span class="line">  Elf32_Half	e_shentsize;</span><br><span class="line">  Elf32_Half	e_shnum;</span><br><span class="line">  Elf32_Half	e_shstrndx;</span><br><span class="line">&#125; Elf32_Ehdr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_hdr</span> &#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>	e_ident[<span class="number">16</span>];	<span class="comment">/* ELF "magic number" */</span></span><br><span class="line">  Elf64_Half e_type;</span><br><span class="line">  Elf64_Half e_machine;</span><br><span class="line">  Elf64_Word e_version;</span><br><span class="line">  Elf64_Addr e_entry;	<span class="comment">/* Entry point virtual address */</span></span><br><span class="line">  Elf64_Off e_phoff;	<span class="comment">/* Program header table file offset */</span></span><br><span class="line">  Elf64_Off e_shoff;	<span class="comment">/* Section header table file offset */</span></span><br><span class="line">  Elf64_Word e_flags;</span><br><span class="line">  Elf64_Half e_ehsize;</span><br><span class="line">  Elf64_Half e_phentsize;</span><br><span class="line">  Elf64_Half e_phnum;</span><br><span class="line">  Elf64_Half e_shentsize;</span><br><span class="line">  Elf64_Half e_shnum;</span><br><span class="line">  Elf64_Half e_shstrndx;</span><br><span class="line">&#125; Elf64_Ehdr;</span><br><span class="line"><span class="comment">/* These constants define the permissions on sections in the program</span></span><br><span class="line"><span class="comment">   header, p_flags. */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_R	0x4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_W	0x2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_X	0x1</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_phdr</span>&#123;</span></span><br><span class="line">  Elf32_Word	p_type;</span><br><span class="line">  Elf32_Off	p_offset;</span><br><span class="line">  Elf32_Addr	p_vaddr;</span><br><span class="line">  Elf32_Addr	p_paddr;</span><br><span class="line">  Elf32_Word	p_filesz;</span><br><span class="line">  Elf32_Word	p_memsz;</span><br><span class="line">  Elf32_Word	p_flags;</span><br><span class="line">  Elf32_Word	p_align;</span><br><span class="line">&#125; Elf32_Phdr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_phdr</span> &#123;</span></span><br><span class="line">  Elf64_Word p_type;</span><br><span class="line">  Elf64_Word p_flags;</span><br><span class="line">  Elf64_Off p_offset;	<span class="comment">/* Segment file offset */</span></span><br><span class="line">  Elf64_Addr p_vaddr;	<span class="comment">/* Segment virtual address */</span></span><br><span class="line">  Elf64_Addr p_paddr;	<span class="comment">/* Segment physical address */</span></span><br><span class="line">  Elf64_Xword p_filesz;	<span class="comment">/* Segment size in file */</span></span><br><span class="line">  Elf64_Xword p_memsz;	<span class="comment">/* Segment size in memory */</span></span><br><span class="line">  Elf64_Xword p_align;	<span class="comment">/* Segment alignment, file &amp; memory */</span></span><br><span class="line">&#125; Elf64_Phdr;</span><br><span class="line"><span class="comment">/* sh_type */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_NULL	0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_PROGBITS	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_SYMTAB	2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_STRTAB	3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_RELA	4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_HASH	5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_DYNAMIC	6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_NOTE	7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_NOBITS	8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_REL	9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_SHLIB	10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_DYNSYM	11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_NUM	12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_LOPROC	0x70000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_HIPROC	0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_LOUSER	0x80000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_HIUSER	0xffffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_LIST	0x70000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_CONFLICT	0x70000002</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_GPTAB	0x70000003</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_UCODE	0x70000004</span></span><br><span class="line"><span class="comment">/* sh_flags */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_WRITE	0x1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_ALLOC	0x2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_EXECINSTR	0x4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MASKPROC	0xf0000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MIPS_GPREL	0x10000000</span></span><br><span class="line"><span class="comment">/* special section indexes */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_UNDEF	0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_LORESERVE	0xff00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_LOPROC	0xff00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_HIPROC	0xff1f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_ABS	0xfff1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_COMMON	0xfff2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_HIRESERVE	0xffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_MIPS_ACCOMON	0xff00</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_shdr</span> &#123;</span></span><br><span class="line">  Elf32_Word	sh_name;</span><br><span class="line">  Elf32_Word	sh_type;</span><br><span class="line">  Elf32_Word	sh_flags;</span><br><span class="line">  Elf32_Addr	sh_addr;</span><br><span class="line">  Elf32_Off	sh_offset;</span><br><span class="line">  Elf32_Word	sh_size;</span><br><span class="line">  Elf32_Word	sh_link;</span><br><span class="line">  Elf32_Word	sh_info;</span><br><span class="line">  Elf32_Word	sh_addralign;</span><br><span class="line">  Elf32_Word	sh_entsize;</span><br><span class="line">&#125; Elf32_Shdr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_shdr</span> &#123;</span></span><br><span class="line">  Elf64_Word sh_name;	<span class="comment">/* Section name, index in string tbl */</span></span><br><span class="line">  Elf64_Word sh_type;	<span class="comment">/* Type of section */</span></span><br><span class="line">  Elf64_Xword sh_flags;	<span class="comment">/* Miscellaneous section attributes */</span></span><br><span class="line">  Elf64_Addr sh_addr;	<span class="comment">/* Section virtual addr at execution */</span></span><br><span class="line">  Elf64_Off sh_offset;	<span class="comment">/* Section file offset */</span></span><br><span class="line">  Elf64_Xword sh_size;	<span class="comment">/* Size of section in bytes */</span></span><br><span class="line">  Elf64_Word sh_link;	<span class="comment">/* Index of another section */</span></span><br><span class="line">  Elf64_Word sh_info;	<span class="comment">/* Additional section information */</span></span><br><span class="line">  Elf64_Xword sh_addralign;	<span class="comment">/* Section alignment */</span></span><br><span class="line">  Elf64_Xword sh_entsize;	<span class="comment">/* Entry size if section holds table */</span></span><br><span class="line">&#125; Elf64_Shdr;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	EI_MAG0	0	<span class="comment">/* e_ident[] indexes */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	EI_MAG1	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	EI_MAG2	2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	EI_MAG3	3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	EI_CLASS	4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	EI_DATA	5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	EI_VERSION	6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	EI_PAD	7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFMAG0	0x7f	<span class="comment">/* EI_MAG */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFMAG1	<span class="meta-string">'E'</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFMAG2	<span class="meta-string">'L'</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFMAG3	<span class="meta-string">'F'</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFMAG	<span class="meta-string">"177ELF"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	SELFMAG	4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFCLASSNONE	0	<span class="comment">/* EI_CLASS */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFCLASS32	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFCLASS64	2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFCLASSNUM	3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATANONE	0	<span class="comment">/* e_ident[EI_DATA] */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATA2LSB	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATA2MSB	2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_NONE	0	<span class="comment">/* e_version, EI_VERSION */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_CURRENT	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_NUM	2</span></span><br><span class="line"><span class="comment">/* Notes used in ET_CORE */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRSTATUS	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRFPREG	2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRPSINFO	3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_TASKSTRUCT	4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRXFPREG     0x46e62b7f      <span class="comment">/* copied from gdb5.1/include/elf/common.h */</span></span></span><br><span class="line"><span class="comment">/* Note header in a PT_NOTE section */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_note</span> &#123;</span></span><br><span class="line">  Elf32_Word	n_namesz;	<span class="comment">/* Name size */</span></span><br><span class="line">  Elf32_Word	n_descsz;	<span class="comment">/* Content size */</span></span><br><span class="line">  Elf32_Word	n_type;	<span class="comment">/* Content type */</span></span><br><span class="line">&#125; Elf32_Nhdr;</span><br><span class="line"><span class="comment">/* Note header in a PT_NOTE section */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_note</span> &#123;</span></span><br><span class="line">  Elf64_Word n_namesz;	<span class="comment">/* Name size */</span></span><br><span class="line">  Elf64_Word n_descsz;	<span class="comment">/* Content size */</span></span><br><span class="line">  Elf64_Word n_type;	<span class="comment">/* Content type */</span></span><br><span class="line">&#125; Elf64_Nhdr;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> ELF_CLASS == ELFCLASS32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elfhdr	elf32_hdr</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elf_phdr	elf32_phdr</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elf_note	elf32_note</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elf_shdr	elf32_shdr</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elf_sym	elf32_sym</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elf_addr_t	Elf32_Off</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ELF_USES_RELOCA</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> ELF_RELOC      Elf32_Rela</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> ELF_RELOC      Elf32_Rel</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elfhdr	elf64_hdr</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elf_phdr	elf64_phdr</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elf_note	elf64_note</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elf_shdr	elf64_shdr</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elf_sym	elf64_sym</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elf_addr_t	Elf64_Off</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ELF_USES_RELOCA</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> ELF_RELOC      Elf64_Rela</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> ELF_RELOC      Elf64_Rel</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* ELF_CLASS */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ElfW</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">if</span> ELF_CLASS == ELFCLASS32</span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">define</span> ElfW(x)  Elf32_ ## x</span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">define</span> ELFW(x)  ELF32_ ## x</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">define</span> ElfW(x)  Elf64_ ## x</span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">define</span> ELFW(x)  ELF64_ ## x</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* _QEMU_ELF_H */</span></span></span><br></pre></td></tr></table></figure>
<p>这份文件清楚的记录了，一个elf文件所具有的结构。对于一份elf文件来说，他可以分为3种类型：</p>
<p>1.可重定位文件：它包含了其他目标文件链接来创建可执行文件或者共享目标文件，一般是汇编器生成的.o文件或者.ko文件。</p>
<p>2.可执行文件: 一个可执行的文件，一般是.bash文件或者是shell脚本文件</p>
<p>3.共享目标文件: 一个动态链接库文件，他会和可重定位文件以及其他的共享目标文件，被链接编辑器处理生成其他的共享目标文件，或者是可执行文件。一般是.so文件，这个也是我们学习的重点。</p>
<p><img src="/images/2.png" alt=""></p>
<p>​                        <!--图片来自北京大学信息科学技术学院操作系统实验室的《ELF文件格式分析》--></p>
<p><em>在我查看elf.h文件的时候我有个非常疑惑的问题，在elf.h文件中为什么只定义了可重定位文件以及共享目标文件类型的结构体，但是却缺少了可执行文件的结构体定义呢。</em></p>
<blockquote>
<h4 id="elf头部信息"><a href="#elf头部信息" class="headerlink" title="elf头部信息"></a>elf头部信息</h4></blockquote>
<p>首先来看elf头文件的结构体定义(这里我们只拿32位的ELF文件为例)：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_NIDENT	16</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_hdr</span>&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>	e_ident[EI_NIDENT];</span><br><span class="line">  Elf32_Half	e_type;</span><br><span class="line">  Elf32_Half	e_machine;</span><br><span class="line">  Elf32_Word	e_version;</span><br><span class="line">  Elf32_Addr	e_entry;  <span class="comment">/* Entry point */</span></span><br><span class="line">  Elf32_Off	e_phoff;</span><br><span class="line">  Elf32_Off	e_shoff;</span><br><span class="line">  Elf32_Word	e_flags;</span><br><span class="line">  Elf32_Half	e_ehsize;</span><br><span class="line">  Elf32_Half	e_phentsize;</span><br><span class="line">  Elf32_Half	e_phnum;</span><br><span class="line">  Elf32_Half	e_shentsize;</span><br><span class="line">  Elf32_Half	e_shnum;</span><br><span class="line">  Elf32_Half	e_shstrndx;</span><br><span class="line">&#125; Elf32_Ehdr;</span><br></pre></td></tr></table></figure>
<h5 id="e-ident：从字面意思来理解，elf文件的定义，他占用了16个字节。"><a href="#e-ident：从字面意思来理解，elf文件的定义，他占用了16个字节。" class="headerlink" title="e_ident：从字面意思来理解，elf文件的定义，他占用了16个字节。"></a><code>e_ident</code>：从字面意思来理解，elf文件的定义，他占用了16个字节。</h5><p><img src="/images/1.png" alt=""></p>
<p>前4个字节对于所有的elf文件都是一样的,如上图所示，对应的就是7f E L F。</p>
<p>0x04h他是文件类的标志，所对应的数值在elf.h文件中有定义。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFCLASSNONE	0	<span class="comment">/* EI_CLASS 非法目标*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFCLASS32	1      <span class="comment">/* 32位目标 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFCLASS64	2      <span class="comment">/* 64位目标 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFCLASSNUM	3      <span class="comment">/* 这里应该是可定义位数目标 */</span></span></span><br></pre></td></tr></table></figure>
<p>0x05h代表了elf文件中的编码方式</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATANONE	0	<span class="comment">/* e_ident[EI_DATA]，非法编码格式 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATA2LSB	1   <span class="comment">/* 小端模式*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATA2MSB	2    <span class="comment">/* 大端模式*/</span></span></span><br></pre></td></tr></table></figure>
<p>0x06h表示elf文件头文件的版本号，这里跟后面的e_version还是有区别的</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_NONE	0	<span class="comment">/* e_version, EI_VERSION */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_CURRENT	1 <span class="comment">/* 当前版本*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_NUM	2    <span class="comment">/* NUM版本*/</span></span></span><br></pre></td></tr></table></figure>
<p>0x7h表示未使用的字节，初始化为0，在elf.h并未见到他的宏定义。</p>
<h5 id="e-type：表示elf文件类型。大小为2个字节"><a href="#e-type：表示elf文件类型。大小为2个字节" class="headerlink" title="e_type：表示elf文件类型。大小为2个字节"></a><code>e_type</code>：表示elf文件类型。大小为2个字节</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_NONE   0     <span class="comment">//非法类型</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_REL    1     <span class="comment">//可重定位</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_EXEC   2     <span class="comment">//可执行</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_DYN    3     <span class="comment">//共享目标，动态库 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_CORE   4     <span class="comment">//core </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_LOPROC 0xff00  <span class="comment">//特定处理器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_HIPROC 0xffff  <span class="comment">//特定处理器</span></span></span><br></pre></td></tr></table></figure>
<h5 id="e-machine：表示目标文件体系结构。大小为2字节"><a href="#e-machine：表示目标文件体系结构。大小为2字节" class="headerlink" title="e_machine：表示目标文件体系结构。大小为2字节"></a><code>e_machine</code>：表示目标文件体系结构。大小为2字节</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_NONE  0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_M32   1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SPARC 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_386   3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_68K   4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_88K   5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_486   6   <span class="comment">/* Perhaps disused */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_860   7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_MIPS	8	<span class="comment">/* MIPS R3000 (officially, big-endian only) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_MIPS_RS4_BE 10	<span class="comment">/* MIPS R4000 big-endian */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PARISC      15	<span class="comment">/* HPPA */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SPARC32PLUS 18	<span class="comment">/* Sun's "v8plus" */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PPC	       20	<span class="comment">/* PowerPC */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PPC64       21       <span class="comment">/* PowerPC64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ARM	40	<span class="comment">/* ARM */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SH	       42	<span class="comment">/* SuperH */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SPARCV9     43	<span class="comment">/* SPARC v9 64-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_IA_64	50	<span class="comment">/* HP/Intel IA-64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_X86_64	62	<span class="comment">/* AMD x86-64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_S390	22	<span class="comment">/* IBM S/390 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_CRIS         76      <span class="comment">/* Axis Communications 32-bit embedded processor */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_V850	87	<span class="comment">/* NEC v850 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_H8_300H      47      <span class="comment">/* Hitachi H8/300H */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_H8S          48      <span class="comment">/* Hitachi H8S     */</span></span></span><br></pre></td></tr></table></figure>
<p>到目前我见到过的值都是16进制的0x28对应10进制正好是40，ARM结构。</p>
<h5 id="e-version：elf文件的版本，大小为4个字节。"><a href="#e-version：elf文件的版本，大小为4个字节。" class="headerlink" title="e_version：elf文件的版本，大小为4个字节。"></a><code>e_version</code>：elf文件的版本，大小为4个字节。</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_NONE	0	<span class="comment">/* e_version, EI_VERSION */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_CURRENT	1 <span class="comment">/* 当前版本*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_NUM	2    <span class="comment">/* NUM版本*/</span></span></span><br></pre></td></tr></table></figure>
<p>这里的版本与之前头文件的版本的宏定义可以说是相同的。</p>
<h5 id="e-entry：elf文件程序入口的虚拟地址，如果没有可以为0，大小为4字节。"><a href="#e-entry：elf文件程序入口的虚拟地址，如果没有可以为0，大小为4字节。" class="headerlink" title="e_entry：elf文件程序入口的虚拟地址，如果没有可以为0，大小为4字节。"></a><code>e_entry</code>：elf文件程序入口的虚拟地址，如果没有可以为0，大小为4字节。</h5><h5 id="e-phoff：elf文件程序头部表格的偏移量-大小按字节计算-，就像在连接视图中展示的那样，程序头部表格是可以没有的，那么他的值为0，大小为4个字节。其实可以这么理解，如果程序头部表格存在的情况下，这个偏移值就是elf头的大小。也就是10进制的52，elf头也正是占用了52个字节。"><a href="#e-phoff：elf文件程序头部表格的偏移量-大小按字节计算-，就像在连接视图中展示的那样，程序头部表格是可以没有的，那么他的值为0，大小为4个字节。其实可以这么理解，如果程序头部表格存在的情况下，这个偏移值就是elf头的大小。也就是10进制的52，elf头也正是占用了52个字节。" class="headerlink" title="e_phoff：elf文件程序头部表格的偏移量(大小按字节计算)，就像在连接视图中展示的那样，程序头部表格是可以没有的，那么他的值为0，大小为4个字节。其实可以这么理解，如果程序头部表格存在的情况下，这个偏移值就是elf头的大小。也就是10进制的52，elf头也正是占用了52个字节。"></a><code>e_phoff</code>：elf文件程序头部表格的偏移量(大小按字节计算)，就像在连接视图中展示的那样，程序头部表格是可以没有的，那么他的值为0，大小为4个字节。其实可以这么理解，如果程序头部表格存在的情况下，这个偏移值就是elf头的大小。也就是10进制的52，elf头也正是占用了52个字节。</h5><h5 id="e-shoff：elf文件节区头部表格的偏移量-大小按字节计算-，就像在执行视图中展示的那样，节区头部表格是可以没有的，他的值为0，大小为4个字节。"><a href="#e-shoff：elf文件节区头部表格的偏移量-大小按字节计算-，就像在执行视图中展示的那样，节区头部表格是可以没有的，他的值为0，大小为4个字节。" class="headerlink" title="e_shoff：elf文件节区头部表格的偏移量(大小按字节计算)，就像在执行视图中展示的那样，节区头部表格是可以没有的，他的值为0，大小为4个字节。"></a><code>e_shoff</code>：elf文件节区头部表格的偏移量(大小按字节计算)，就像在执行视图中展示的那样，节区头部表格是可以没有的，他的值为0，大小为4个字节。</h5><h5 id="e-flags：elf文件特定于处理器的标志，大小4字节。"><a href="#e-flags：elf文件特定于处理器的标志，大小4字节。" class="headerlink" title="e_flags：elf文件特定于处理器的标志，大小4字节。"></a><code>e_flags</code>：elf文件特定于处理器的标志，大小4字节。</h5><h5 id="e-ehsize：elf文件头部的大小，字节计算。大小为2字节。"><a href="#e-ehsize：elf文件头部的大小，字节计算。大小为2字节。" class="headerlink" title="e_ehsize：elf文件头部的大小，字节计算。大小为2字节。"></a><code>e_ehsize</code>：elf文件头部的大小，字节计算。大小为2字节。</h5><h5 id="e-phentsize：elf文件程序头部表格的表项大小（按字节计算），可为0，大小2字节。"><a href="#e-phentsize：elf文件程序头部表格的表项大小（按字节计算），可为0，大小2字节。" class="headerlink" title="e_phentsize：elf文件程序头部表格的表项大小（按字节计算），可为0，大小2字节。"></a><code>e_phentsize</code>：elf文件程序头部表格的表项大小（按字节计算），可为0，大小2字节。</h5><h5 id="e-phnum：elf文件程序头部表格的表项数目，可以为-0。-他和上面这个成对出现，要有都有，反之亦然。"><a href="#e-phnum：elf文件程序头部表格的表项数目，可以为-0。-他和上面这个成对出现，要有都有，反之亦然。" class="headerlink" title="e_phnum：elf文件程序头部表格的表项数目，可以为 0。 他和上面这个成对出现，要有都有，反之亦然。"></a><code>e_phnum</code>：elf文件程序头部表格的表项数目，可以为 0。 他和上面这个成对出现，要有都有，反之亦然。</h5><h5 id="e-shentsize：elf节区头部表格的表项大小（按字节计算），可为0，大小2字节。"><a href="#e-shentsize：elf节区头部表格的表项大小（按字节计算），可为0，大小2字节。" class="headerlink" title="e_shentsize：elf节区头部表格的表项大小（按字节计算），可为0，大小2字节。"></a><code>e_shentsize</code>：elf节区头部表格的表项大小（按字节计算），可为0，大小2字节。</h5><h5 id="e-shnum：elf文件节区头部表格数目，可为0，大小2字节。"><a href="#e-shnum：elf文件节区头部表格数目，可为0，大小2字节。" class="headerlink" title="e_shnum：elf文件节区头部表格数目，可为0，大小2字节。"></a><code>e_shnum</code>：elf文件节区头部表格数目，可为0，大小2字节。</h5><h5 id="e-shstrndx：elf文件节区头部表格中与节区名称字符串表相关的表项的索引。如果文件没有节区名称字符串表，此参数可以为-SHN-UNDEF。大小2字节。"><a href="#e-shstrndx：elf文件节区头部表格中与节区名称字符串表相关的表项的索引。如果文件没有节区名称字符串表，此参数可以为-SHN-UNDEF。大小2字节。" class="headerlink" title="e_shstrndx：elf文件节区头部表格中与节区名称字符串表相关的表项的索引。如果文件没有节区名称字符串表，此参数可以为 SHN_UNDEF。大小2字节。"></a><code>e_shstrndx</code>：elf文件节区头部表格中与节区名称字符串表相关的表项的索引。如果文件没有节区名称字符串表，此参数可以为 SHN_UNDEF。大小2字节。</h5><blockquote>
<h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3></blockquote>
<p>今天学习了elf文件的组成，以及头部的详细解释，那现在就自己动手写一个elf文件头部解析的程序吧</p>
<p>首先定义elf文件头部的数据结构：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//elf文件的头部数据结构</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElfType32</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> Elf32_hdr elf32hdr;	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ElfType32</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		elf32hdr=<span class="keyword">new</span> Elf32_hdr();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//每个字段的大小，按照elf.h文件来进行定义</span></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Elf32_hdr</span></span>&#123;</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_ident=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">16</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_type=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_machine=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_version=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_entry=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_phoff=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_shoff=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_flags=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_ehsize=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_phentsize=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_phnum=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_shentsize=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_shnum=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2</span>];</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">byte</span>[] e_shstrndx=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2</span>];</span><br><span class="line">        </span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">return</span> <span class="string">"magic:"</span>+Utils.byte2HexString(e_ident)+</span><br><span class="line">				<span class="string">"\ne_type:"</span>+Utils.byte2HexString(e_type)+</span><br><span class="line">				<span class="string">"\ne_machine:"</span>+Utils.byte2HexString(e_machine)+</span><br><span class="line">				<span class="string">"\ne_version:"</span>+Utils.byte2HexString(e_version)+</span><br><span class="line">				<span class="string">"\ne_entry:"</span>+Utils.byte2HexString(e_entry)+</span><br><span class="line">				<span class="string">"\ne_phoff:"</span>+Utils.byte2HexString(e_phoff)+</span><br><span class="line">				<span class="string">"\ne_shoff:"</span>+Utils.byte2HexString(e_shoff)+</span><br><span class="line">				<span class="string">"\ne_flags:"</span>+Utils.byte2HexString(e_flags)+</span><br><span class="line">				<span class="string">"\ne_ehsize:"</span>+Utils.byte2HexString(e_ehsize)+</span><br><span class="line">				<span class="string">"\ne_phentsize:"</span>+Utils.byte2HexString(e_phentsize)+</span><br><span class="line">				<span class="string">"\ne_phnum:"</span>+Utils.byte2HexString(e_phnum)+</span><br><span class="line">				<span class="string">"\ne_shentsize:"</span>+Utils.byte2HexString(e_shentsize)+</span><br><span class="line">				<span class="string">"\ne_shnum:"</span>+Utils.byte2HexString(e_shnum)+</span><br><span class="line">				<span class="string">"\ne_shstrndx:"</span>+Utils.byte2HexString(e_shstrndx);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后我们在主函数中进行解析：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//解析类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParseSo</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> ElfType32 type_32=<span class="keyword">new</span> ElfType32();</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//测试所用到的so文件</span></span><br><span class="line">		<span class="keyword">byte</span>[] readFile = Utils.readFile(<span class="string">"has/libjiagu.so"</span>);</span><br><span class="line">		paresSo(readFile);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">paresSo</span><span class="params">(<span class="keyword">byte</span>[] readFile)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		parseHeader(readFile, <span class="number">0</span>);</span><br><span class="line">		System.out.println(<span class="string">"header:\n"</span>+type_32.hdr);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">parseHeader</span><span class="params">(<span class="keyword">byte</span>[] header, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub	</span></span><br><span class="line">        <span class="comment">//这一步一定要算好每个字段的偏移量</span></span><br><span class="line">		type_32.hdr.e_ident = Utils.copyBytes(header, <span class="number">0</span>, <span class="number">16</span>);</span><br><span class="line">		type_32.hdr.e_type = Utils.copyBytes(header, <span class="number">16</span>, <span class="number">2</span>);</span><br><span class="line">		type_32.hdr.e_machine = Utils.copyBytes(header, <span class="number">18</span>, <span class="number">2</span>);</span><br><span class="line">		type_32.hdr.e_version = Utils.copyBytes(header, <span class="number">20</span>, <span class="number">4</span>);</span><br><span class="line">		type_32.hdr.e_entry = Utils.copyBytes(header, <span class="number">24</span>, <span class="number">4</span>);</span><br><span class="line">		type_32.hdr.e_phoff = Utils.copyBytes(header, <span class="number">28</span>, <span class="number">4</span>);</span><br><span class="line">		type_32.hdr.e_shoff = Utils.copyBytes(header, <span class="number">32</span>, <span class="number">4</span>);</span><br><span class="line">		type_32.hdr.e_flags = Utils.copyBytes(header, <span class="number">36</span>, <span class="number">4</span>);</span><br><span class="line">		type_32.hdr.e_ehsize = Utils.copyBytes(header, <span class="number">40</span>, <span class="number">2</span>);</span><br><span class="line">		type_32.hdr.e_phentsize = Utils.copyBytes(header, <span class="number">42</span>, <span class="number">2</span>);</span><br><span class="line">		type_32.hdr.e_phnum = Utils.copyBytes(header, <span class="number">44</span>,<span class="number">2</span>);</span><br><span class="line">		type_32.hdr.e_shentsize = Utils.copyBytes(header, <span class="number">46</span>,<span class="number">2</span>);</span><br><span class="line">		type_32.hdr.e_shnum = Utils.copyBytes(header, <span class="number">48</span>, <span class="number">2</span>);</span><br><span class="line">		type_32.hdr.e_shstrndx = Utils.copyBytes(header, <span class="number">50</span>, <span class="number">2</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接下来还有工具类Utils：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//解析工具类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Utils</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">byte2HexString</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line">		StringBuilder builder=<span class="keyword">new</span> StringBuilder();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; bytes.length; i++) &#123;</span><br><span class="line">			String hexString = Integer.toHexString(bytes[i]);</span><br><span class="line">            <span class="comment">//这里我做了一下处理，因为1个字节是8位，但是首位算符号位所以他的长度值为127到-128</span></span><br><span class="line">			<span class="keyword">if</span> (hexString.length()&gt;<span class="number">2</span>) &#123;</span><br><span class="line">				builder.append(hexString.substring(hexString.length()-<span class="number">2</span>));</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span> (hexString.length()&lt;<span class="number">2</span>) &#123;</span><br><span class="line">				builder.append(<span class="string">"0"</span>+hexString);</span><br><span class="line">			&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">				builder.append(hexString);</span><br><span class="line">			&#125;	</span><br><span class="line">			builder.append(<span class="string">" "</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> builder.toString();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//将so文件以2进制写出来</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] readFile(String file) &#123;</span><br><span class="line">		File f=<span class="keyword">new</span> File(file);</span><br><span class="line">		FileInputStream fis=<span class="keyword">null</span>;</span><br><span class="line">		ByteArrayOutputStream bos=<span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">byte</span>[] elf=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			fis=<span class="keyword">new</span> FileInputStream(f);</span><br><span class="line">			bos=<span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">			<span class="keyword">int</span> size;</span><br><span class="line">			<span class="keyword">while</span> ((size=fis.read(elf))!=-<span class="number">1</span>) &#123;</span><br><span class="line">				bos.write(elf, <span class="number">0</span>, size);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> bos.toByteArray();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (fis!=<span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					fis.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (bos!=<span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					bos.flush();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					bos.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] copyBytes(<span class="keyword">byte</span>[] header, <span class="keyword">int</span> i, <span class="keyword">int</span> j) &#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">byte</span>[] elfheader=<span class="keyword">new</span> <span class="keyword">byte</span>[j];</span><br><span class="line">		System.arraycopy(header, i, elfheader, <span class="number">0</span>, j);</span><br><span class="line">		<span class="keyword">return</span> elfheader;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们来看下结果以及和使用010editor打开的so做个对比</p>
<p>程序结果：</p>
<p><img src="/images/3.png" alt=""></p>
<p>010editor看到的：</p>
<p><img src="/images/44.png" alt=""></p>
<p>可以看出，解析成功。</p>
]]></content>
      
        <categories>
            
            <category> android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[java的类加载器]]></title>
      <url>/2018/03/01/java/</url>
      <content type="html"><![CDATA[<blockquote>
<h3 id="类加载器的概念"><a href="#类加载器的概念" class="headerlink" title="类加载器的概念"></a>类加载器的概念</h3></blockquote>
<p>类加载器顾名思义，就是在程序运行时加载java的字节码文件的一个东西。当我们运行java程序时，编写好的源java文件(以.java为后缀的文件)被编译为java的字节码文件(以.class为后缀的文件)，当运行时需要这个类的时候，类加载器就会把需要的java字节码文件加载并且<code>newInstance()</code>生成它的对象，放到jvm虚拟机内存中，让jvm使用。</p>
<blockquote>
<h3 id="类加载器的分类"><a href="#类加载器的分类" class="headerlink" title="类加载器的分类"></a>类加载器的分类</h3></blockquote>
<p>类加载器这个概念自JDK1.0时就有了，好像一开始sun公司来定义它是因为它可以来加载从网络中取到的java程序。类加载器符合树形结构，如下图：</p>
<p><img src="/images/classloader.png" alt=""></p>
<p>首先在这里再补充一个概念，类加载器也是类，也是用java语言编写的。好了，那就继续看一下每个类加载器的解释，BootStrap是嵌在JVM内核中的加载器，该加载器是用C++语言写的，主要负载加载JAVA_HOME/lib下的类库，启动类加载器无法被应用程序直接使用。ExtClassLoader又称之为扩展类加载器，它主要来负责加载jre/lib/ext下的类库，如果在此文件夹下有jvm所需要的类，那么此类会被ExtClassLoader来加载。AppClassLoader也是系统类加载器，也是应用程序的类加载器，他负责加载classpath目录下所有的class和jar文件。</p>
<blockquote>
<h3 id="类加载器的工作模式"><a href="#类加载器的工作模式" class="headerlink" title="类加载器的工作模式"></a>类加载器的工作模式</h3></blockquote>
<p>类加载器并不是通常意义上的继承关系，而是一种双亲委派机制，我通过一张图，来讲解一下，此图为盗用姜维大神的图：</p>
<p><img src="/images/non.png" alt=""></p>
<p>从这张图中，可以很清楚，类加载器的工作机制，在类加载时，自定义的类加载器首先会委托给AppClassLoader，AppClassLoader再委托给ExtClassLoader，最后ExtClassLoader委托BootStrap，BootStrap先去加载，如果加载成功，类加载就结束了，不成功就会交给ExtClassLoader去加载，成功就结束，不成功就继续交给AppClassLoader去加载，成功就结束，不成功继续交给自定义的类加载器，成功就结束，不成功就会报ClassNotFoundException异常，整个类加载过程结束，这也就很好的说明了为什么类加载器的工作原理是双亲委托机制。</p>
<blockquote>
<h3 id="java源码中的ClassLoader运行机制"><a href="#java源码中的ClassLoader运行机制" class="headerlink" title="java源码中的ClassLoader运行机制"></a>java源码中的ClassLoader运行机制</h3></blockquote>
<p>当我们明白java类加载器的工作原理后，我们就可以自定义ClassLoader来满足我们自己的业务需求，虽然，java提供的这三个类加载器已经能满足大多数的业务需求，但是，我们如果想提高程序的安全性那就不得不自定义classloader了，首先自定义classloader都必须要继承ClassLoader这个类。这个类有三个关键的方法，他们是loadClass(),findClass()以及defineClass()。首先我们来看看loadClass()里都做了什么。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Class&lt;?&gt; loadClass(String name) <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">    <span class="comment">//返回loadClass(String name, boolean resolve)</span></span><br><span class="line">       <span class="keyword">return</span> loadClass(name, <span class="keyword">false</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<p>当类加载要加载类时，他首先会执行loadClass(String name)；这个方法需要一个参数，就是被加载类的名字，这个名字是全信息名。我们继续追踪loadClass(String name, boolean resolve)方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> Class&lt;?&gt; loadClass(String name, <span class="keyword">boolean</span> resolve)</span><br><span class="line">        <span class="keyword">throws</span> ClassNotFoundException</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//线程锁，防止多线程中同时加载类</span></span><br><span class="line">        <span class="keyword">synchronized</span> (getClassLoadingLock(name)) &#123;</span><br><span class="line">            <span class="comment">// 首先，检查这个类是否已经被加载了，如果是就不重复加载，否则就加载</span></span><br><span class="line">            Class&lt;?&gt; c = findLoadedClass(name);</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">long</span> t0 = System.nanoTime();</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                这个if判断非常明显的可以看出为什么说类加载器是双亲委托机制。他会检查这个类加载器的父</span></span><br><span class="line"><span class="comment">                类加载器是否为空如果不为空就调用父类加载器的loadclass方法，否则就执行</span></span><br><span class="line"><span class="comment">                findBootstrapClassOrNull方法，这个方法请看下面。</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                    <span class="keyword">if</span> (parent != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        c = parent.loadClass(name, <span class="keyword">false</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        c = findBootstrapClassOrNull(name);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                    <span class="comment">//类没找到，抛出ClassNotFoundException</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (c == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="comment">//如果父类的加载器，加载失败就会走到这里</span></span><br><span class="line">                    <span class="keyword">long</span> t1 = System.nanoTime();</span><br><span class="line">                    c = findClass(name);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// this is the defining class loader; record the stats</span></span><br><span class="line">                    sun.misc.PerfCounter.getParentDelegationTime().addTime(t1 - t0);</span><br><span class="line">                    sun.misc.PerfCounter.getFindClassTime().addElapsedTimeFrom(t1);</span><br><span class="line">                    sun.misc.PerfCounter.getFindClasses().increment();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (resolve) &#123;</span><br><span class="line">                resolveClass(c);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> c;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Class&lt;?&gt; findBootstrapClassOrNull(String name)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//这里就是检查被加载的类名是否正确，不正确返回null</span></span><br><span class="line">        <span class="keyword">if</span> (!checkName(name)) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">//这是个native方法看不到源码，可能是用BootStrap来进行类的加载</span></span><br><span class="line">        <span class="keyword">return</span> findBootstrapClass(name);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> Class&lt;?&gt; findClass(String name) <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ClassNotFoundException(name);</span><br><span class="line">    <span class="comment">//哈哈，这就是自定义ClassLoader需要复写的方法</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">这里只需要看最后的defineClass方法就可以了。从中可以看出，加载器是将类变为字节流的形式，读进来，继而进</span></span><br><span class="line"><span class="comment">行类的加载的</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">final</span> Class&lt;?&gt; defineClass(String name, <span class="keyword">byte</span>[] b, <span class="keyword">int</span> off, <span class="keyword">int</span> len,</span><br><span class="line">                                         ProtectionDomain protectionDomain)</span><br><span class="line">        <span class="keyword">throws</span> ClassFormatError</span><br><span class="line">    &#123;</span><br><span class="line">        protectionDomain = preDefineClass(name, protectionDomain);</span><br><span class="line">        String source = defineClassSourceLocation(protectionDomain);</span><br><span class="line">        Class&lt;?&gt; c = defineClass1(name, b, off, len, protectionDomain, source);</span><br><span class="line">        postDefineClass(c, protectionDomain);</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>现在清楚了一个ClassLoader中，三个关键方法的执行顺序了首先loadClass()-&gt;findClass()-&gt;defineClass();</p>
<blockquote>
<h3 id="自己动手定义ClassLoader"><a href="#自己动手定义ClassLoader" class="headerlink" title="自己动手定义ClassLoader"></a>自己动手定义ClassLoader</h3></blockquote>
<p>首先咱随便写一个需要被我们自定义的类加载器加载的类；</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ClassLoaderJava.java  这是需要被类加载器加载的类，输出一句话；</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassLoaderJava</span>  </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> VersionId=<span class="number">1L</span>;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">return</span> <span class="string">"输出类加载器"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后我们再自定义ClassLoader；</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    CustomClassLoader.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomClassLoader</span> <span class="keyword">extends</span> <span class="title">ClassLoader</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> String classPath;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">CustomClassLoader</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">CustomClassLoader</span><span class="params">(String classPath)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.classPath=classPath;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="meta">@SuppressWarnings</span>(<span class="string">"deprecation"</span>)</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> Class&lt;?&gt; findClass(String name) <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">	<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">int</span> bytes=-<span class="number">1</span>;</span><br><span class="line">		String classPathFile=classPath+<span class="string">"/"</span>+name+<span class="string">".class"</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			FileInputStream fileInputStream=<span class="keyword">new</span> FileInputStream(classPathFile);</span><br><span class="line">			ByteArrayOutputStream byteArrayOutputStream=<span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">			<span class="keyword">while</span> ((bytes=fileInputStream.read())!=-<span class="number">1</span>) &#123;</span><br><span class="line">				byteArrayOutputStream.write(bytes);</span><br><span class="line">			&#125;</span><br><span class="line">			byteArrayOutputStream.flush();</span><br><span class="line">			byteArrayOutputStream.close();</span><br><span class="line">			fileInputStream.close();</span><br><span class="line">			<span class="keyword">byte</span>[] classByte=byteArrayOutputStream.toByteArray();</span><br><span class="line">			</span><br><span class="line">			<span class="keyword">return</span> defineClass(classByte, <span class="number">0</span>, classByte.length);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">super</span>.findClass(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后我们需要一个测试类；</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            Class class1 = </span><br><span class="line">            <span class="keyword">new</span> CustomClassLoader(<span class="string">"bin\\org\\hahah\\demo"</span>).loadClass(<span class="string">"ClassLoaderJava"</span>);  </span><br><span class="line">            Object object = class1.newInstance();</span><br><span class="line">            System.out.println(<span class="string">"这是什么ClassLoader:"</span>+object.getClass().getClassLoader().getClass().getName());  </span><br><span class="line">            System.out.println(object);  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e1) &#123;  </span><br><span class="line">            e1.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后我们运行，Console所打印的信息，正是我们希望看到的结果；</p>
<p><img src="/images/result.png" alt=""></p>
<p>end！</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[apk加固原理]]></title>
      <url>/2018/02/27/Android/</url>
      <content type="html"><![CDATA[<p>本文主要通过学习姜维大神的<a href="http://www.520monkey.com/archives/553" target="_blank" rel="noopener">Android中的Apk的加固(加壳)原理解析和实现</a>和雪一梦大神的<a href="https://bbs.pediy.com/thread-223796.htm" target="_blank" rel="noopener">根据”so劫持”过360加固详细分析</a> 来记录自己的学习过程。</p>
<blockquote>
<h3 id="为什么要对APK加固"><a href="#为什么要对APK加固" class="headerlink" title="为什么要对APK加固"></a>为什么要对APK加固</h3></blockquote>
<p>目前的软件发展速度非常快，尤其是移动端软件越来越深入人们的生活之中，我们时时刻刻都需要这些软件来进行支付，查询以及浏览信息。我们的隐私信息以及经济安全可谓是都在app之中。所以这也加快了Apk加固技术的发展，加固后的apk虽然增大了不法分子的破解难度，但是也明显降低了app的运行效率，所以有一些加固是针对于apk的主要逻辑代码进行的。加固也分为dex加固和so加固，但是呢，dex加固的重要性应该是更加高一点的，因为反编译后的java代码的可读性更高。</p>
<blockquote>
<h3 id="加固原理"><a href="#加固原理" class="headerlink" title="加固原理"></a>加固原理</h3></blockquote>
<p>图片盗用姜维大神</p>
<p><img src="/images/protectapk.png" alt=""></p>
<p>从上图我们可以明白，apk加固主要步骤为：</p>
<p>将一个需要加固的apk文件，一个负责解密的壳程序，先将apk文件进行加密，然后将解密的壳程序与之合并，得到新的dex文件，再将壳的dex文件替换，并得到一个全新的apk文件。将某个被加固的apk解压，如下图：</p>
<p><img src="/images/jiagua.png" alt="assets文件夹"></p>
<p>经过加密后的文件的assets文件夹中多出了两个libjiagu.so和libjiagu_x86.so文件，这就是apk被加固的标志。</p>
<p><img src="/images/jadx.png" alt="dex文件"></p>
<p>我们用jadx打开加压后的dex文件，看到和加固的原理一样，dex文件被替换。以上就是加固的原理。</p>
<blockquote>
<h3 id="Dex文件解析"><a href="#Dex文件解析" class="headerlink" title="Dex文件解析"></a>Dex文件解析</h3></blockquote>
<p>这里我需要盗用一张非虫大神的图：</p>
<p><img src="/images/Android dex文件格式结构图.png" alt="Android dex文件格式结构图"></p>
<p>Dex是Android平台上(Dalvik虚拟机)的可执行文件。其实所有的加固，加密措施都是针对DexHeader中的checksum，signature和filesize来进行的，因为加固需要对dex文件进行改动，所以dex文件校验的数据也必须进行改动，知道了这个点之后，也就明白了，我们只要掌握dexheader其他的也就万变不离其宗了。</p>
<p>首先根据图中所标注的，前8个字节是整个dex文件的magic（魔法数），其中低地址的4个字节的数据是dex文件</p>
<p>的标识符，所有的dex文件的标志符都是一样的。高地址的4个字节数据是dex文件的版本，图中的dex文件版本是035。<code>0x08h-0x0Bh</code>这段地址上存放的是checksum，使用adler32加密算法，用来检验dex文件除magic和checksum以外的所有文件区域，检查错误。<code>0x0Ch-0x1Fh</code>这段地址上存放的是signature，使用SHA-1 hash算法，识别dex文件的唯一性。使用双重校验保证文件的安全性以及效率。<code>0x20h-0x23h</code>这段地址上存放的是这个dex文件的大小，<code>0x24h-0x27h</code>这段地址存放的是dexheader的大小，我发现好像所有的dexheader的大小都一样都是0x70，<code>0x28h-0x2Bh</code>这段地址上标志的是dex文件的字节序，像图中的0x78563412就是默认为小尾模式，跟C/C++中的小端模式一样<strong>即高地址存放低字节，低地址存放高字节</strong>，<code>0x2ch-0x2fh</code>中说明的是连接段的大小，默认为0表示静态连接。</p>
<blockquote>
<h3 id="Apk加固具体步骤"><a href="#Apk加固具体步骤" class="headerlink" title="Apk加固具体步骤"></a>Apk加固具体步骤</h3></blockquote>
<p>首先我们需要一个需要加密的APK程序，在此我们就简单的写一个：</p>
<p>主Application：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        Log.i(<span class="string">"mmm"</span>,<span class="string">"被加密APK载入"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个Application很简单就是打印一下Log。</p>
<p>接下来是主Activity：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> TextView textView;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        textView=findViewById(R.id.text);</span><br><span class="line">        textView.setText(<span class="string">"被加密的App主页面"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>也是非常的简单，就是一个textview的展示。</p>
<p>按照上面的流程我们需要对源APK进行加密，那么我们就需要一个加密的程序：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加密的程序</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMain</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//读取源Apk</span></span><br><span class="line">			File payloadSrcFile=<span class="keyword">new</span> File(<span class="string">"force/ForceApkObj.apk"</span>);</span><br><span class="line">			<span class="comment">//读取脱壳程序的dex</span></span><br><span class="line">			File unShellDexFile=<span class="keyword">new</span> File(<span class="string">"force/ForceApk.dex"</span>);</span><br><span class="line">            <span class="comment">//将这个文件先转换为Byte，然后进行加密</span></span><br><span class="line">			<span class="keyword">byte</span>[] payloadArray=encrpt(readFileBytes(payloadSrcFile));</span><br><span class="line">            <span class="comment">//脱壳程序的dex也是一样</span></span><br><span class="line">			<span class="keyword">byte</span>[] unShellDexArray=readFileBytes(unShellDexFile);</span><br><span class="line">            <span class="comment">//分别得到这两个文件的大小，并计算出他们的总大小，最后加上的那4个字节存放的是目标APK的大小</span></span><br><span class="line">			<span class="keyword">int</span> payloadLen=payloadArray.length;</span><br><span class="line">			<span class="keyword">int</span> unShellDexLen=unShellDexArray.length;</span><br><span class="line">			<span class="keyword">int</span> totalLen=payloadLen+unShellDexLen+<span class="number">4</span>;</span><br><span class="line">			<span class="comment">//申请我们所需要的byte数组，大小就是上面的总量</span></span><br><span class="line">			<span class="keyword">byte</span>[] newdex=<span class="keyword">new</span> <span class="keyword">byte</span>[totalLen];</span><br><span class="line">			<span class="comment">//先将脱壳的dex写进我们所申请的数组当中，其次是被加密的APK，最后是目标Apk的大小</span></span><br><span class="line">			System.arraycopy(unShellDexArray, <span class="number">0</span>, newdex, <span class="number">0</span>, unShellDexLen);</span><br><span class="line">			</span><br><span class="line">			System.arraycopy(payloadArray, <span class="number">0</span>, newdex, unShellDexLen, payloadLen);</span><br><span class="line">			</span><br><span class="line">			System.arraycopy(intToByte(payloadLen),<span class="number">0</span>, newdex, totalLen-<span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">			<span class="comment">//分别修改dex文件大小，checksum和签名</span></span><br><span class="line">			fixFileSizeHeader(newdex);</span><br><span class="line">			</span><br><span class="line">			fixSHA1Header(newdex);</span><br><span class="line">			</span><br><span class="line">			fixCheckSumHeader(newdex);</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//新创建一个dex文件，将我们完成的byte数组写入进去，这个dex也就是一个全新的dex</span></span><br><span class="line">			String str=<span class="string">"force/classes.dex"</span>;</span><br><span class="line">			File file =<span class="keyword">new</span> File(str);</span><br><span class="line">			<span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">				file.createNewFile();</span><br><span class="line">			&#125;</span><br><span class="line">			FileOutputStream localFileOutputStream=<span class="keyword">new</span> FileOutputStream(str);</span><br><span class="line">			localFileOutputStream.write(newdex);</span><br><span class="line">			localFileOutputStream.flush();</span><br><span class="line">			localFileOutputStream.close();</span><br><span class="line">			</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//这是apk的加密算法，使用每个byte异或一下</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] encrpt(<span class="keyword">byte</span>[] srcdata) &#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;srcdata.length;i++) &#123;</span><br><span class="line">			srcdata[i]=(<span class="keyword">byte</span>)(<span class="number">0xFF</span>^srcdata[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> srcdata;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//checksum</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fixCheckSumHeader</span><span class="params">(<span class="keyword">byte</span>[] dexBytes)</span> </span>&#123;</span><br><span class="line">		Adler32 adler32=<span class="keyword">new</span> Adler32();</span><br><span class="line">        <span class="comment">//一开始我没有搞的很清楚，通过重看checksum明白了，checksum使用的是Adler32算法，他是对整个dex文</span></span><br><span class="line">        <span class="comment">//件除了前8个字节的魔法数和4个字节自己以外进行文件的错误检查的，在这里我们使用Adler32对象update</span></span><br><span class="line">        <span class="comment">//方法重新生成checksum。</span></span><br><span class="line">		adler32.update(dexBytes, <span class="number">12</span>, dexBytes.length-<span class="number">12</span>);</span><br><span class="line">		<span class="keyword">long</span> value=adler32.getValue();</span><br><span class="line">		<span class="comment">//拿到的checksum</span></span><br><span class="line">		<span class="keyword">int</span> va=(<span class="keyword">int</span>)value;</span><br><span class="line">		<span class="keyword">byte</span>[] newcs=intToByte(va);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">byte</span>[] recs=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="comment">//在之前已经知道了，dex文件是采用小端模式，即高字节放低地址，低字节放字高地址上</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line">			recs[i]=newcs[newcs.length-<span class="number">1</span>-i];</span><br><span class="line">			System.out.println(Integer.toHexString(newcs[i]));</span><br><span class="line">		&#125;</span><br><span class="line">        <span class="comment">//对dex的checksum进行修改</span></span><br><span class="line">		System.arraycopy(recs, <span class="number">0</span>, dexBytes, <span class="number">8</span>, <span class="number">4</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//int转换成Byte</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] intToByte(<span class="keyword">int</span> number) &#123;</span><br><span class="line">		<span class="keyword">byte</span>[] b=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&gt;=<span class="number">0</span>;i--) &#123;</span><br><span class="line">			b[i]=(<span class="keyword">byte</span>)(number%<span class="number">256</span>);</span><br><span class="line">			number&gt;&gt;=<span class="number">8</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//修改dex文件的签名</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fixSHA1Header</span><span class="params">(<span class="keyword">byte</span>[] dexBytes)</span> <span class="keyword">throws</span> </span></span><br><span class="line"><span class="function">	NoSuchAlgorithmException</span>&#123;</span><br><span class="line">        <span class="comment">//dex文件的签名方式使用SHA-1加密</span></span><br><span class="line">		MessageDigest mDigest=MessageDigest.getInstance(<span class="string">"SHA-1"</span>);</span><br><span class="line">		mDigest.update(dexBytes, <span class="number">32</span>, dexBytes.length-<span class="number">32</span>);</span><br><span class="line">		<span class="keyword">byte</span>[] newdt=mDigest.digest();</span><br><span class="line">		System.arraycopy(newdt, <span class="number">0</span>, dexBytes, <span class="number">12</span>, <span class="number">20</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//修改dex头文件的中的file_size</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fixFileSizeHeader</span><span class="params">(<span class="keyword">byte</span>[] dexBytes)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">byte</span>[] newfs=intToByte(dexBytes.length);</span><br><span class="line">		<span class="keyword">byte</span>[] refs=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line">			refs[i]=newfs[newfs.length-<span class="number">1</span>-i];</span><br><span class="line">		&#125;</span><br><span class="line">		System.arraycopy(refs, <span class="number">0</span>, dexBytes, <span class="number">32</span>, <span class="number">4</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//将源APk转换为Byte数组</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] readFileBytes(File file) <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">		<span class="keyword">byte</span>[] arrayOfByte=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">		ByteArrayOutputStream localByteArrayOutputStream =<span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">		FileInputStream fis=<span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">			<span class="keyword">int</span> i=fis.read(arrayOfByte);</span><br><span class="line">			<span class="keyword">if</span> (i!=-<span class="number">1</span>) &#123;</span><br><span class="line">				localByteArrayOutputStream.write(arrayOfByte,<span class="number">0</span>,i);</span><br><span class="line">			&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">return</span> localByteArrayOutputStream.toByteArray();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>现在想一想，现在合并之后的Apk是如何找到源Apk进行加载的呢。因为类的加载都是通过classloader来进行加载的，那是不是可以说，我们只需要更改脱壳程序中的classloader就可以让他来加载源Apk程序了，那么这里又产生了一个问题，那就是他只会加载源程序，但是脱壳程的逻辑并不会执行，那这样就会导致源程序无法被解密，这样运行也是失败的，所以我们需要使这个加载源程序的dexclassloader以原来的classloader为父节点，那么这样脱壳程序也能顺利的执行并对源程序解密。</p>
<p>脱壳程序（这里我直接拿四哥的源码，在他基础上我继续分析一下）：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**这个是脱壳程序的application，主要做了两个重要的部分，1首先对源加密的apk进行解密。2使用动态加载来加载</span></span><br><span class="line"><span class="comment">*源APK的application让他执行自己的生命周期，因为attachBaseContext()他要比oncreate()执行靠前，所以源apk</span></span><br><span class="line"><span class="comment">*的解密工作就需要在这个方法中做。首先从Apk中拿到合并后的dex文件，然后根据尾部的大小，将源APK取出来，这时*候，apk依然是byte数组，然后我们对他进行解密操作，另外自定义dexclassloader，来加载源APK。在脱壳程序中的</span></span><br><span class="line"><span class="comment">*oncreate方法中主要是通过反射将当前的Application替换为源程序的Application。其实在ActivityThread中有一*个内部类，AppBindData,这个类里有启动的app的所有详细信息，我们只需要将这个类里的属性值通过反射进行置换就*可以了。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyApplication</span> <span class="keyword">extends</span> <span class="title">Application</span></span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String appkey = <span class="string">"APPLICATION_CLASS_NAME"</span>;  </span><br><span class="line">    <span class="keyword">private</span> String apkFileName;  </span><br><span class="line">    <span class="keyword">private</span> String odexPath;  </span><br><span class="line">    <span class="keyword">private</span> String libPath;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//这是context 赋值  </span></span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">attachBaseContext</span><span class="params">(Context base)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">super</span>.attachBaseContext(base);  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            <span class="comment">//创建两个文件夹payload_odex，payload_lib 私有的，可写的文件目录  </span></span><br><span class="line">            File odex = <span class="keyword">this</span>.getDir(<span class="string">"payload_odex"</span>, MODE_PRIVATE);  </span><br><span class="line">            File libs = <span class="keyword">this</span>.getDir(<span class="string">"payload_lib"</span>, MODE_PRIVATE);  </span><br><span class="line">            odexPath = odex.getAbsolutePath();  </span><br><span class="line">            libPath = libs.getAbsolutePath();  </span><br><span class="line">            apkFileName = odex.getAbsolutePath() + <span class="string">"/payload.apk"</span>;  </span><br><span class="line">            File dexFile = <span class="keyword">new</span> File(apkFileName);  </span><br><span class="line">            Log.i(<span class="string">"demo"</span>, <span class="string">"apk size:"</span>+dexFile.length());  </span><br><span class="line">            <span class="keyword">if</span> (!dexFile.exists())  </span><br><span class="line">            &#123;  </span><br><span class="line">                dexFile.createNewFile();  <span class="comment">//在payload_odex文件夹内，创建payload.apk  </span></span><br><span class="line">                <span class="comment">// 读取程序classes.dex文件  </span></span><br><span class="line">                <span class="keyword">byte</span>[] dexdata = <span class="keyword">this</span>.readDexFileFromApk();  </span><br><span class="line">                  </span><br><span class="line">                <span class="comment">// 分离出解壳后的apk文件已用于动态加载  </span></span><br><span class="line">                <span class="keyword">this</span>.splitPayLoadFromDex(dexdata);  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="comment">// 配置动态加载环境  </span></span><br><span class="line">            Object currentActivityThread = RefInvoke.invokeStaticMethod(  </span><br><span class="line">                    <span class="string">"android.app.ActivityThread"</span>, <span class="string">"currentActivityThread"</span>,  </span><br><span class="line">                    <span class="keyword">new</span> Class[] &#123;&#125;, <span class="keyword">new</span> Object[] &#123;&#125;);<span class="comment">//获取主线程对象 http://blog.csdn.net/myarrow/article/details/14223493  </span></span><br><span class="line">            String packageName = <span class="keyword">this</span>.getPackageName();<span class="comment">//当前apk的包名  </span></span><br><span class="line">            <span class="comment">//下面两句不是太理解  </span></span><br><span class="line">            ArrayMap mPackages = (ArrayMap) RefInvoke.getFieldOjbect(  </span><br><span class="line">                    <span class="string">"android.app.ActivityThread"</span>, currentActivityThread,  </span><br><span class="line">                    <span class="string">"mPackages"</span>);  </span><br><span class="line">            WeakReference wr = (WeakReference) mPackages.get(packageName);  </span><br><span class="line">            <span class="comment">//创建被加壳apk的DexClassLoader对象  加载apk内的类和本地代码（c/c++代码）  </span></span><br><span class="line">            DexClassLoader dLoader = <span class="keyword">new</span> DexClassLoader(apkFileName, odexPath,  </span><br><span class="line">                    libPath, (ClassLoader) RefInvoke.getFieldOjbect(  </span><br><span class="line">                            <span class="string">"android.app.LoadedApk"</span>, wr.get(), <span class="string">"mClassLoader"</span>));  </span><br><span class="line">            <span class="comment">//base.getClassLoader(); 是不是就等同于 (ClassLoader) RefInvoke.getFieldOjbect()? 有空验证下//?  </span></span><br><span class="line">            <span class="comment">//把当前进程的DexClassLoader 设置成了被加壳apk的DexClassLoader  ----有点c++中进程环境的意思~~  </span></span><br><span class="line">            RefInvoke.setFieldOjbect(<span class="string">"android.app.LoadedApk"</span>, <span class="string">"mClassLoader"</span>,  </span><br><span class="line">                    wr.get(), dLoader);  </span><br><span class="line">              </span><br><span class="line">            <span class="keyword">try</span>&#123;  </span><br><span class="line">                Object actObj = dLoader.loadClass(<span class="string">"com.example.forceapkobj.MainActivity"</span>);  </span><br><span class="line">                Log.i(<span class="string">"demo"</span>, <span class="string">"actObj:"</span>+actObj);  </span><br><span class="line">            &#125;<span class="keyword">catch</span>(Exception e)&#123;  </span><br><span class="line">                Log.i(<span class="string">"demo"</span>, <span class="string">"activity:"</span>+Log.getStackTraceString(e));  </span><br><span class="line">            &#125;  </span><br><span class="line">              </span><br><span class="line">  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;  </span><br><span class="line">            Log.i(<span class="string">"demo"</span>, <span class="string">"error:"</span>+Log.getStackTraceString(e));  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="comment">//loadResources(apkFileName);  </span></span><br><span class="line">              </span><br><span class="line">            Log.i(<span class="string">"demo"</span>, <span class="string">"onCreate"</span>);  </span><br><span class="line">            <span class="comment">// 如果源应用配置有Appliction对象，则替换为源应用Applicaiton，以便不影响源程序逻辑。  </span></span><br><span class="line">            String appClassName = <span class="keyword">null</span>;  </span><br><span class="line">            <span class="keyword">try</span> &#123;  </span><br><span class="line">                ApplicationInfo ai = <span class="keyword">this</span>.getPackageManager()  </span><br><span class="line">                        .getApplicationInfo(<span class="keyword">this</span>.getPackageName(),  </span><br><span class="line">                                PackageManager.GET_META_DATA);  </span><br><span class="line">                Bundle bundle = ai.metaData;  </span><br><span class="line">                <span class="keyword">if</span> (bundle != <span class="keyword">null</span> &amp;&amp; bundle.containsKey(<span class="string">"APPLICATION_CLASS_NAME"</span>)) &#123;  </span><br><span class="line">                    appClassName = bundle.getString(<span class="string">"APPLICATION_CLASS_NAME"</span>);<span class="comment">//className 是配置在xml文件中的。  </span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                    Log.i(<span class="string">"demo"</span>, <span class="string">"have no application class name"</span>);  </span><br><span class="line">                    <span class="keyword">return</span>;  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125; <span class="keyword">catch</span> (NameNotFoundException e) &#123;  </span><br><span class="line">                Log.i(<span class="string">"demo"</span>, <span class="string">"error:"</span>+Log.getStackTraceString(e));  </span><br><span class="line">                e.printStackTrace();  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="comment">//有值的话调用该Applicaiton  </span></span><br><span class="line">            Object currentActivityThread = RefInvoke.invokeStaticMethod(  </span><br><span class="line">                    <span class="string">"android.app.ActivityThread"</span>, <span class="string">"currentActivityThread"</span>,  </span><br><span class="line">                    <span class="keyword">new</span> Class[] &#123;&#125;, <span class="keyword">new</span> Object[] &#123;&#125;);  </span><br><span class="line">            Object mBoundApplication = RefInvoke.getFieldOjbect(  </span><br><span class="line">                    <span class="string">"android.app.ActivityThread"</span>, currentActivityThread,  </span><br><span class="line">                    <span class="string">"mBoundApplication"</span>);  </span><br><span class="line">            Object loadedApkInfo = RefInvoke.getFieldOjbect(  </span><br><span class="line">                    <span class="string">"android.app.ActivityThread$AppBindData"</span>,  </span><br><span class="line">                    mBoundApplication, <span class="string">"info"</span>);  </span><br><span class="line">            <span class="comment">//把当前进程的mApplication 设置成了null  </span></span><br><span class="line">            RefInvoke.setFieldOjbect(<span class="string">"android.app.LoadedApk"</span>, <span class="string">"mApplication"</span>,  </span><br><span class="line">                    loadedApkInfo, <span class="keyword">null</span>);  </span><br><span class="line">            Object oldApplication = RefInvoke.getFieldOjbect(  </span><br><span class="line">                    <span class="string">"android.app.ActivityThread"</span>, currentActivityThread,  </span><br><span class="line">                    <span class="string">"mInitialApplication"</span>);  </span><br><span class="line">            <span class="comment">//http://www.codeceo.com/article/android-context.html  </span></span><br><span class="line">            ArrayList&lt;Application&gt; mAllApplications = (ArrayList&lt;Application&gt;) RefInvoke  </span><br><span class="line">                    .getFieldOjbect(<span class="string">"android.app.ActivityThread"</span>,  </span><br><span class="line">                            currentActivityThread, <span class="string">"mAllApplications"</span>);  </span><br><span class="line">            mAllApplications.remove(oldApplication);<span class="comment">//删除oldApplication  </span></span><br><span class="line">              </span><br><span class="line">            ApplicationInfo appinfo_In_LoadedApk = (ApplicationInfo) RefInvoke  </span><br><span class="line">                    .getFieldOjbect(<span class="string">"android.app.LoadedApk"</span>, loadedApkInfo,  </span><br><span class="line">                            <span class="string">"mApplicationInfo"</span>);  </span><br><span class="line">            ApplicationInfo appinfo_In_AppBindData = (ApplicationInfo) RefInvoke  </span><br><span class="line">                    .getFieldOjbect(<span class="string">"android.app.ActivityThread$AppBindData"</span>,  </span><br><span class="line">                            mBoundApplication, <span class="string">"appInfo"</span>);  </span><br><span class="line">            appinfo_In_LoadedApk.className = appClassName;  </span><br><span class="line">            appinfo_In_AppBindData.className = appClassName;  </span><br><span class="line">            Application app = (Application) RefInvoke.invokeMethod(  </span><br><span class="line">                    <span class="string">"android.app.LoadedApk"</span>, <span class="string">"makeApplication"</span>, loadedApkInfo,  </span><br><span class="line">                    <span class="keyword">new</span> Class[] &#123; Boolean.class, Instrumentation.class &#125;,  </span><br><span class="line">                    <span class="keyword">new</span> Object[] &#123; <span class="keyword">false</span>, <span class="keyword">null</span> &#125;);<span class="comment">//执行 makeApplication（false,null）  </span></span><br><span class="line">            RefInvoke.setFieldOjbect(<span class="string">"android.app.ActivityThread"</span>,  </span><br><span class="line">                    <span class="string">"mInitialApplication"</span>, currentActivityThread, app);  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">           </span><br><span class="line">            <span class="comment">//这里我还有点搞不明白。我猜应该是，将原来的provider替换为源apk的，这样才能保证程序的正常</span></span><br><span class="line">            ArrayMap mProviderMap = (ArrayMap) RefInvoke.getFieldOjbect(  </span><br><span class="line">                    <span class="string">"android.app.ActivityThread"</span>, currentActivityThread,  </span><br><span class="line">                    <span class="string">"mProviderMap"</span>);  </span><br><span class="line">            Iterator it = mProviderMap.values().iterator();  </span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) &#123;  </span><br><span class="line">                Object providerClientRecord = it.next();  </span><br><span class="line">                Object localProvider = RefInvoke.getFieldOjbect(  </span><br><span class="line">                        <span class="string">"android.app.ActivityThread$ProviderClientRecord"</span>,  </span><br><span class="line">                        providerClientRecord, <span class="string">"mLocalProvider"</span>);  </span><br><span class="line">                RefInvoke.setFieldOjbect(<span class="string">"android.content.ContentProvider"</span>,  </span><br><span class="line">                        <span class="string">"mContext"</span>, localProvider, app);  </span><br><span class="line">            &#125;  </span><br><span class="line"></span><br><span class="line">              </span><br><span class="line">            app.onCreate();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 释放被加壳的apk文件，so文件 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">splitPayLoadFromDex</span><span class="params">(<span class="keyword">byte</span>[] apkdata)</span> <span class="keyword">throws</span> IOException </span>&#123;  </span><br><span class="line">        <span class="keyword">int</span> ablen = apkdata.length;  </span><br><span class="line">        <span class="comment">//取被加壳apk的长度   这里的长度取值，对应加壳时长度的赋值都可以做些简化  </span></span><br><span class="line">        <span class="keyword">byte</span>[] dexlen = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];  </span><br><span class="line">        System.arraycopy(apkdata, ablen - <span class="number">4</span>, dexlen, <span class="number">0</span>, <span class="number">4</span>);  </span><br><span class="line">        ByteArrayInputStream bais = <span class="keyword">new</span> ByteArrayInputStream(dexlen);  </span><br><span class="line">        DataInputStream in = <span class="keyword">new</span> DataInputStream(bais);  </span><br><span class="line">        <span class="keyword">int</span> readInt = in.readInt();  </span><br><span class="line">        System.out.println(Integer.toHexString(readInt));  </span><br><span class="line">        <span class="keyword">byte</span>[] newdex = <span class="keyword">new</span> <span class="keyword">byte</span>[readInt];  </span><br><span class="line">        <span class="comment">//把被加壳apk内容拷贝到newdex中  </span></span><br><span class="line">        System.arraycopy(apkdata, ablen - <span class="number">4</span> - readInt, newdex, <span class="number">0</span>, readInt);  </span><br><span class="line">        <span class="comment">//这里应该加上对于apk的解密操作，若加壳是加密处理的话  </span></span><br><span class="line">        <span class="comment">//?  </span></span><br><span class="line">          </span><br><span class="line">        <span class="comment">//对源程序Apk进行解密  </span></span><br><span class="line">        newdex = decrypt(newdex);  </span><br><span class="line">          </span><br><span class="line">        <span class="comment">//写入apk文件     </span></span><br><span class="line">        File file = <span class="keyword">new</span> File(apkFileName);  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            FileOutputStream localFileOutputStream = <span class="keyword">new</span> FileOutputStream(file);  </span><br><span class="line">            localFileOutputStream.write(newdex);  </span><br><span class="line">            localFileOutputStream.close();  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException localIOException) &#123;  </span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(localIOException);  </span><br><span class="line">        &#125;  </span><br><span class="line">          </span><br><span class="line">        <span class="comment">//分析被加壳的apk文件  </span></span><br><span class="line">        ZipInputStream localZipInputStream = <span class="keyword">new</span> ZipInputStream(  </span><br><span class="line">                <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(file)));  </span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;  </span><br><span class="line">            ZipEntry localZipEntry = localZipInputStream.getNextEntry();<span class="comment">//不了解这个是否也遍历子目录，看样子应该是遍历的  </span></span><br><span class="line">            <span class="keyword">if</span> (localZipEntry == <span class="keyword">null</span>) &#123;  </span><br><span class="line">                localZipInputStream.close();  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="comment">//取出被加壳apk用到的so文件，放到 libPath中（data/data/包名/payload_lib)  </span></span><br><span class="line">            String name = localZipEntry.getName();  </span><br><span class="line">            <span class="keyword">if</span> (name.startsWith(<span class="string">"lib/"</span>) &amp;&amp; name.endsWith(<span class="string">".so"</span>)) &#123;  </span><br><span class="line">                File storeFile = <span class="keyword">new</span> File(libPath + <span class="string">"/"</span>  </span><br><span class="line">                        + name.substring(name.lastIndexOf(<span class="string">'/'</span>)));  </span><br><span class="line">                storeFile.createNewFile();  </span><br><span class="line">                FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(storeFile);  </span><br><span class="line">                <span class="keyword">byte</span>[] arrayOfByte = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];  </span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;  </span><br><span class="line">                    <span class="keyword">int</span> i = localZipInputStream.read(arrayOfByte);  </span><br><span class="line">                    <span class="keyword">if</span> (i == -<span class="number">1</span>)  </span><br><span class="line">                        <span class="keyword">break</span>;  </span><br><span class="line">                    fos.write(arrayOfByte, <span class="number">0</span>, i);  </span><br><span class="line">                &#125;  </span><br><span class="line">                fos.flush();  </span><br><span class="line">                fos.close();  </span><br><span class="line">            &#125;  </span><br><span class="line">            localZipInputStream.closeEntry();  </span><br><span class="line">        &#125;  </span><br><span class="line">        localZipInputStream.close();  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 从apk包里面获取dex文件内容（byte） </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] readDexFileFromApk() <span class="keyword">throws</span> IOException &#123;  </span><br><span class="line">        ByteArrayOutputStream dexByteArrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();  </span><br><span class="line">        ZipInputStream localZipInputStream = <span class="keyword">new</span> ZipInputStream(  </span><br><span class="line">                <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(  </span><br><span class="line">                        <span class="keyword">this</span>.getApplicationInfo().sourceDir)));  </span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;  </span><br><span class="line">            ZipEntry localZipEntry = localZipInputStream.getNextEntry();  </span><br><span class="line">            <span class="keyword">if</span> (localZipEntry == <span class="keyword">null</span>) &#123;  </span><br><span class="line">                localZipInputStream.close();  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">if</span> (localZipEntry.getName().equals(<span class="string">"classes.dex"</span>)) &#123;  </span><br><span class="line">                <span class="keyword">byte</span>[] arrayOfByte = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];  </span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;  </span><br><span class="line">                    <span class="keyword">int</span> i = localZipInputStream.read(arrayOfByte);  </span><br><span class="line">                    <span class="keyword">if</span> (i == -<span class="number">1</span>)  </span><br><span class="line">                        <span class="keyword">break</span>;  </span><br><span class="line">                    dexByteArrayOutputStream.write(arrayOfByte, <span class="number">0</span>, i);  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">            localZipInputStream.closeEntry();  </span><br><span class="line">        &#125;  </span><br><span class="line">        localZipInputStream.close();  </span><br><span class="line">        <span class="keyword">return</span> dexByteArrayOutputStream.toByteArray();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// //直接返回数据，读者可以添加自己解密方法  </span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] decrypt(<span class="keyword">byte</span>[] srcdata) &#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;srcdata.length;i++)&#123;  </span><br><span class="line">            srcdata[i] = (<span class="keyword">byte</span>)(<span class="number">0xFF</span> ^ srcdata[i]);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> srcdata;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//以下是加载资源  </span></span><br><span class="line">    <span class="keyword">protected</span> AssetManager mAssetManager;<span class="comment">//资源管理器    </span></span><br><span class="line">    <span class="keyword">protected</span> Resources mResources;<span class="comment">//资源    </span></span><br><span class="line">    <span class="keyword">protected</span> Theme mTheme;<span class="comment">//主题    </span></span><br><span class="line">      </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">loadResources</span><span class="params">(String dexPath)</span> </span>&#123;    </span><br><span class="line">        <span class="keyword">try</span> &#123;    </span><br><span class="line">            AssetManager assetManager = AssetManager.class.newInstance();    </span><br><span class="line">            Method addAssetPath = assetManager.getClass().getMethod(<span class="string">"addAssetPath"</span>, String.class);    </span><br><span class="line">            addAssetPath.invoke(assetManager, dexPath);    </span><br><span class="line">            mAssetManager = assetManager;    </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;    </span><br><span class="line">            Log.i(<span class="string">"inject"</span>, <span class="string">"loadResource error:"</span>+Log.getStackTraceString(e));  </span><br><span class="line">            e.printStackTrace();    </span><br><span class="line">        &#125;    </span><br><span class="line">        Resources superRes = <span class="keyword">super</span>.getResources();    </span><br><span class="line">        superRes.getDisplayMetrics();    </span><br><span class="line">        superRes.getConfiguration();    </span><br><span class="line">        mResources = <span class="keyword">new</span> Resources(mAssetManager, superRes.getDisplayMetrics(),superRes.getConfiguration());    </span><br><span class="line">        mTheme = mResources.newTheme();    </span><br><span class="line">        mTheme.setTo(<span class="keyword">super</span>.getTheme());  </span><br><span class="line">    &#125;    </span><br><span class="line">      </span><br><span class="line">    <span class="meta">@Override</span>    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> AssetManager <span class="title">getAssets</span><span class="params">()</span> </span>&#123;    </span><br><span class="line">        <span class="keyword">return</span> mAssetManager == <span class="keyword">null</span> ? <span class="keyword">super</span>.getAssets() : mAssetManager;    </span><br><span class="line">    &#125;    </span><br><span class="line">      </span><br><span class="line">    <span class="meta">@Override</span>    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Resources <span class="title">getResources</span><span class="params">()</span> </span>&#123;    </span><br><span class="line">        <span class="keyword">return</span> mResources == <span class="keyword">null</span> ? <span class="keyword">super</span>.getResources() : mResources;    </span><br><span class="line">    &#125;    </span><br><span class="line">      </span><br><span class="line">    <span class="meta">@Override</span>    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Theme <span class="title">getTheme</span><span class="params">()</span> </span>&#123;    </span><br><span class="line">        <span class="keyword">return</span> mTheme == <span class="keyword">null</span> ? <span class="keyword">super</span>.getTheme() : mTheme;    </span><br><span class="line">    &#125;   </span><br><span class="line">      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后，我们就把脱壳程序中的dex文件替换为合并之后的dex文件，再重新签个名。但是我走到这一步，总是出现安装失败的问题，我猜应该是重新签名索引发的问题，我将继续实验。</p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[smali语法]]></title>
      <url>/2018/02/26/smali/</url>
      <content type="html"><![CDATA[<blockquote>
<h3 id="smali中的包信息"><a href="#smali中的包信息" class="headerlink" title="smali中的包信息"></a>smali中的包信息</h3></blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.class <span class="keyword">public</span> Lcom/a;</span><br><span class="line">.<span class="keyword">super</span> Lcom/b;</span><br><span class="line">.source <span class="string">"c.java"</span></span><br></pre></td></tr></table></figure>
<p>这是一个由c.java编译得到的smail文件。他是com.a这个包下的一个类，继承自com.b这个类。</p>
<blockquote>
<h3 id="smali中的声明"><a href="#smali中的声明" class="headerlink" title="smali中的声明"></a>smali中的声明</h3></blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># annotations</span><br><span class="line">.annotations system Ldalvik/annotation/MemberClasses;</span><br><span class="line">value=&#123;</span><br><span class="line">  Lcom/a$z;</span><br><span class="line">  Lcom/a$x;</span><br><span class="line">&#125;</span><br><span class="line">.end annotation</span><br></pre></td></tr></table></figure>
<p>这个模块是内部类的声明，a这个类中有两个成员内部类：z和x。</p>
<blockquote>
<h3 id="smali中的寄存器"><a href="#smali中的寄存器" class="headerlink" title="smali中的寄存器"></a>smali中的寄存器</h3></blockquote>
<p>在smail中所有的操作都必须经过寄存器来进行。本地寄存器用v来表示，例如v0，v1，v2等。参数寄存器用p来表示，例如p0，p1，p2等。特别的一点是，p0并不一定是函数中的第一个参数，在非静态方法中，它指代“this”，p1表示函数的第一个参数。而在静态方法中，p0就是函数的第一个参数。</p>
<blockquote>
<h3 id="寄存器的表示"><a href="#寄存器的表示" class="headerlink" title="寄存器的表示"></a>寄存器的表示</h3></blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span>/<span class="number">4</span> v0,<span class="number">0x1</span></span><br><span class="line">iput-<span class="keyword">boolean</span> v0,p0,Lcom/a;-&gt;isTrue:Z</span><br></pre></td></tr></table></figure>
<p>上面的代码块首先使用了v0本地寄存器，并把值0x1存到v0中，第二句用<code>iput-boolean</code>这个指令把v0中的值存放到com.a.isTrue这个成员变量中，即：<code>this.isTrue=true；</code>。</p>
<blockquote>
<h3 id="smali中的成员变量"><a href="#smali中的成员变量" class="headerlink" title="smali中的成员变量"></a>smali中的成员变量</h3></blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.field <span class="keyword">public</span>/<span class="keyword">private</span> [<span class="keyword">static</span>] [<span class="keyword">final</span>] varName:&lt;类型&gt;</span><br></pre></td></tr></table></figure>
<p>对于不同的成员变量有不同的指令。一般的获取指令有:<code>iget,sget,iget-boolean,sget-boolean,iget-object,sget-object</code> 一般的操作指令有：<code>iput,sput,iput-boolean,sput-boolean,iput-object,sput-object</code></p>
<p>其中没有-object后缀的表示操作的是基本数据类型，反之操作的是对象。操作boolean类型需要添加后缀-boolean。</p>
<blockquote>
<h3 id="smali成员变量指令"><a href="#smali成员变量指令" class="headerlink" title="smali成员变量指令"></a>smali成员变量指令</h3></blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sget-object v0,Lcom/a;-&gt;ID:Ljava/lang/String;</span><br></pre></td></tr></table></figure>
<p>获取ID这个String类型的成员变量放到寄存器V0中。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iget-object v0,p0,Lcom/a;-&gt;view:Lcom/a/view;</span><br></pre></td></tr></table></figure>
<p>iget比sget多了一个参数寄存器p0这个就是指代该成员变量所在类的实例，即p0指代“this”。</p>
<p>对于获取array数组的操作的指令是aget，aget-object。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span>/<span class="number">4</span> v3,<span class="number">0x0</span></span><br><span class="line">sput-object v3,Lcom/a;-&gt;timer:Lcom/a/timer;</span><br></pre></td></tr></table></figure>
<p>以上两行指令相当于<code>timer=null;</code> 如果后缀为-boolean那么0x0代表false；</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.local v0,args:Landroid/os/Message;</span><br><span class="line"><span class="keyword">const</span>/<span class="number">4</span> v1,<span class="number">0x12</span></span><br><span class="line">iput v1,v0,Landroid/os/Message;-&gt;what:I;</span><br></pre></td></tr></table></figure>
<p>上面3行指令相当于：<code>args.what=18;</code></p>
<blockquote>
<h3 id="smali函数的调用"><a href="#smali函数的调用" class="headerlink" title="smali函数的调用"></a>smali函数的调用</h3></blockquote>
<p>smali中的函数和成员变量一样也分为两种类型，direct method和virtual method。</p>
<p>direct method代表的函数是private的，virtual method则代表的是public和protected，所以在调用函数时有invoke-direct和invoke-virtual，invoke-static，invoke-super及invoke-interface等几种不同的指令。对于参数多于4个的函数，调用的形式为invoke-XXXXX/range</p>
<p>invoke-static表示调用的是静态函数。例如<code>invoke-static {},Landroid/os/Debug;-&gt;waitForDebugger()V;</code>。</p>
<p>invoke-static后面的{}表示调用此函数的实例和参数列表，由于这个方法是static的也不需要参数，所以{}为空。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span>-string v0,<span class="string">"NDKLIB"</span></span><br><span class="line">invoke-<span class="keyword">static</span> &#123;v0&#125;,Ljava/lang/System;-&gt;lodaLibrary(Ljava/lang/Sting;)V</span><br></pre></td></tr></table></figure>
<p>这两行指令表示调用static void System.loadlibrary(String)方法。</p>
<p>invoke-super调用父类方法的指令，生命周期方法中用的较多。</p>
<p><code>invoke-direct {p0},Landroid/app/TabActivity;-&gt;&lt;init&gt;()V</code> 这个init()方法就是定义在TabActivity中的private方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sget-object v0,Lcom/a;-&gt;b:Lcom/c;</span><br><span class="line">invoke-virtual &#123;v0,v1&#125;,Lcom/c;-&gt;Messages(Ljava/lang/Object;)V</span><br></pre></td></tr></table></figure>
<p>v0是b:Lcom/c ,v1是传递给void Messages(Object)方法的参数。</p>
<p>如果函数的参数多于4个（不包括4个）时调用方法的指令后跟/range ,例如：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">invoke-direct/range &#123;v0...v5&#125;,Lcmb/pb/ui/PBContainerActivity;-&gt;h(ILjava/lang/CharSequence;Ljava/lang/String;Landroid/content/Intent;I)Z</span><br></pre></td></tr></table></figure>
<p>需要传递v0到v5共6个参数，{}中采用省略号形式，且连续。</p>
<blockquote>
<h3 id="smali中函数结果的返回操作"><a href="#smali中函数结果的返回操作" class="headerlink" title="smali中函数结果的返回操作"></a>smali中函数结果的返回操作</h3></blockquote>
<p>java中调用函数和返回函数结果可以用一条语句完成，但在smail中则需要分开完成，如果调用的函数返回非void，那么还需要用到move-result（返回基本数据类型）或者move-result-object（返回对象类型）。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span>-string v0,<span class="string">"aaa"</span></span><br><span class="line">invoke-<span class="keyword">static</span> &#123;v0&#125;,Lcmb/pbi;-&gt;t(Ljava/lang/String;)Ljava/lang/String;</span><br><span class="line">move-result-object v2</span><br></pre></td></tr></table></figure>
<p>其中v2就是保存调用t方法后返回的String类型的字符串。</p>
<blockquote>
<h3 id="smali中的if语句"><a href="#smali中的if语句" class="headerlink" title="smali中的if语句"></a>smali中的if语句</h3></blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.<span class="function">method <span class="keyword">private</span> <span class="title">ifRegistered</span><span class="params">()</span>Z</span></span><br><span class="line"><span class="function">  .locals 2    <span class="comment">//此函数中的本地寄存器的个数</span></span></span><br><span class="line"><span class="function">  .prologue</span></span><br><span class="line"><span class="function">  <span class="keyword">const</span>/4 v0,0x1   <span class="comment">//v0赋值为1</span></span></span><br><span class="line"><span class="function">  .local v0,tempFlag:Z</span></span><br><span class="line"><span class="function">  <span class="keyword">if</span>-eqz v0,:cond_0  <span class="comment">//判断v0是否等于0，等于0则跳到cond_0执行</span></span></span><br><span class="line"><span class="function">  <span class="keyword">const</span>/4 v1,0x1    <span class="comment">//符合条件分支</span></span></span><br><span class="line"><span class="function">  :goto_0    <span class="comment">//标签</span></span></span><br><span class="line"><span class="function">  retun v1   <span class="comment">//返回v1的值</span></span></span><br><span class="line"><span class="function">  :cond_0    <span class="comment">//标签</span></span></span><br><span class="line"><span class="function">  <span class="keyword">const</span>/4 v1,0x0    <span class="comment">//cond_0分支</span></span></span><br><span class="line"><span class="function">  goto:goto_0    <span class="comment">//跳到goto_0执行 即返回v1的值 改成return v1也可以</span></span></span><br><span class="line"><span class="function">.end method</span></span><br></pre></td></tr></table></figure>
<blockquote>
<h3 id="smali中的for语句"><a href="#smali中的for语句" class="headerlink" title="smali中的for语句"></a>smali中的for语句</h3></blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span>/<span class="number">4</span> v0,<span class="number">0x0</span>   <span class="comment">//v0=0</span></span><br><span class="line">.local v0,i:I</span><br><span class="line">:goto_0</span><br><span class="line"><span class="keyword">if</span>-It v0,v3,:cond_0  <span class="comment">//v0小于v3则跳转到cond_0并执行分支：cond_0</span></span><br><span class="line"><span class="keyword">return</span>-<span class="keyword">void</span></span><br><span class="line">  :cond_0  <span class="comment">//标签</span></span><br><span class="line">iget-object v1,p0,Lcom/a/MainActivity;-&gt;listStrings:Ljava/util/List; <span class="comment">//引用对象</span></span><br><span class="line"><span class="keyword">const</span>-string v2,<span class="string">"a"</span></span><br><span class="line">invoke-<span class="class"><span class="keyword">interface</span> </span>&#123;v1,v2&#125;,Ljava/util/List;-&gt;add(Ljava/lang/Object;)Z <span class="comment">//list是接口，执行接口方法add</span></span><br><span class="line">add-<span class="keyword">int</span>/lit8 v0,v0,<span class="number">0x1</span>  <span class="comment">//将第二个v0寄存器中的值，加上0x1的值放入第一个寄存器中</span></span><br><span class="line">goto:goto_0  <span class="comment">//回到goto_0标签</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> smali </category>
            
        </categories>
        
        
        <tags>
            
            <tag> smali </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C语言基本认识(二)]]></title>
      <url>/2018/02/12/c/</url>
      <content type="html"><![CDATA[<blockquote>
<h1 id="C语言基本认识-二"><a href="#C语言基本认识-二" class="headerlink" title="C语言基本认识(二)"></a>C语言基本认识(二)</h1></blockquote>
<hr>
<p>​    <strong>现在距离过年还有4天，正好项目顺利发版，工作也清闲了些，想想已经一个多月没有写了，心中隐隐作痛，那我就继续出发了。</strong></p>
<hr>
<p>​                                                                     <em>书接上回。</em></p>
<blockquote>
<h3 id="volatile关键字"><a href="#volatile关键字" class="headerlink" title="volatile关键字"></a>volatile关键字</h3></blockquote>
<p>​    volatile关键字和 const 一样是一种类型修饰符，用它修饰的变量表示可以被某些编译器未知的因素更改，比如操作系统、硬件或者其它线程等。遇到这个关键字声明的变量，编译器对访问该变量的代码就不再进行优化，从而可以提供对特殊地址的稳定访问。也就可以这样理解，被volatile修饰的变量，每次访问都要从内存当中读取，提高程序的稳定性。</p>
<blockquote>
<h3 id="struct关键字"><a href="#struct关键字" class="headerlink" title="struct关键字"></a>struct关键字</h3></blockquote>
<p>​    在不考虑内存对齐的情况下，struct变量的所占的内存大小就是他所有自变量占用内存大小的和。柔性数组是定义在结构体中的一个可变大小的数组，他的前面必须要有一个成员变量，sizeof一个有柔性数组的结构体，他的大小并不包含这个柔性数组，包括柔性数组的结构体可以用malloc()函数来进行内存的动态分配。并且用free()函数来释放内存。结构体的成员变量都是public的而class都是private。</p>
<blockquote>
<h3 id="union关键字"><a href="#union关键字" class="headerlink" title="union关键字"></a>union关键字</h3></blockquote>
<p>​    union的大小是其最大的成员变量的大小，常用union来压缩空间，使用条件是他的成员变量不可能同时使用。另外，这里我们在提一下大小端模式：</p>
<p>大端模式（Big_endian）：字数据的高字节存储在低地址中，而字数据的低字节则存放在高地址中。 </p>
<p>小端模式（Little_endian）：字数据的高字节存储在高地址中，而字数据的低字节则存放在低地址中。</p>
<blockquote>
<h3 id="enum关键字"><a href="#enum关键字" class="headerlink" title="enum关键字"></a>enum关键字</h3></blockquote>
<p>​    enum的一般定义规则如下：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> enum_type_name</span><br><span class="line">&#123;</span><br><span class="line">ENUM_CONST_1,</span><br><span class="line">ENUM_CONST_2,</span><br><span class="line">...</span><br><span class="line">ENUM_CONST_n</span><br><span class="line">&#125; enum_variable_name;</span><br></pre></td></tr></table></figure>
<p>​    在这里enum_type_name是数据类型名，而enum_variable_name是enum_type_name类型的变量名，也就是枚举变量。实际上enum_type_name类型是对一个变量取值范围的限定，而花括号内则是它的取值范围（都是常量，后面的比前面的+1）。如果如果给该类型变量所赋的值不在这个范围当中，就会报错。</p>
<blockquote>
<h4 id="枚举和-define宏的区别"><a href="#枚举和-define宏的区别" class="headerlink" title="枚举和#define宏的区别"></a>枚举和#define宏的区别</h4></blockquote>
<p>1）#define 宏常量是在预编译阶段进行简单替换。枚举常量则是在编译的时候确定其值。<br>2）一般在编译器里，可以调试枚举常量，但是不能调试宏常量。<br>3）枚举可以一次定义大量相关的常量，而#define 宏一次只能定义一个。</p>
<blockquote>
<h3 id="typedef-关键字"><a href="#typedef-关键字" class="headerlink" title="typedef 关键字"></a>typedef 关键字</h3></blockquote>
<p>​    typedef 的真正意思是给一个已经存在的数据类型（注意：是类型不是变量）取一个别名，而非定义一个新的数据类型。在实际项目中，为了方便，可能很多数据类型（尤其是结构体之类的自定义数据类型）需要我们重新取一个适用实际情况的别名。这时候 typedef 就可以帮助我们。例如：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//code</span></span><br><span class="line"></span><br><span class="line">&#125;Stu_st,*Stu_pst;</span><br></pre></td></tr></table></figure>
<p>### </p>
]]></content>
      
        <categories>
            
            <category> C语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c语言 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C语言的基本认识（一）]]></title>
      <url>/2017/12/29/c/</url>
      <content type="html"><![CDATA[<blockquote>
<h1 id="C语言的基本认识（一）"><a href="#C语言的基本认识（一）" class="headerlink" title="C语言的基本认识（一）"></a>C语言的基本认识（一）</h1></blockquote>
<hr>
<p>​     <strong>为什么我要学习C语言，因为在以后的Android反编译和开发的学习中，对于SO文件的解析以及NDK的开发，都离不开C语言，C语言对比其他语言来说他更加趋于底层，适用大量计算，高效率的需求。对于任何编程语言的学习者来说都更加有帮助，好了废话说到这，来开始我们的C语言学习。</strong></p>
<hr>
<blockquote>
<h3 id="1-定义与声明的区别："><a href="#1-定义与声明的区别：" class="headerlink" title="1.定义与声明的区别："></a>1.定义与声明的区别：</h3></blockquote>
<p>定义声明最重要的区别：定义创建了对象并为对象分配了内存，声明没有分配内存（函数的参数）。</p>
<blockquote>
<h3 id="2-C中的关键字和数据类型："><a href="#2-C中的关键字和数据类型：" class="headerlink" title="2.C中的关键字和数据类型："></a>2.C中的关键字和数据类型：</h3></blockquote>
<p>在C语言中一共有32个关键字以及6钟数据类型；再次声明sizeof是关键字而不是函数，各个类型所占的内存大小分别为short是2字节，int是4字节，long是4字节，char是1字节，double是8字节，float是4字节。以下是C语言中所有32个关键字：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">关键字                                                            意 义</span><br><span class="line"><span class="keyword">auto</span>                                              声明自动变量，缺省时编译器一般默认为 <span class="keyword">auto</span></span><br><span class="line"><span class="keyword">int</span>                                               声明整型变量</span><br><span class="line"><span class="keyword">double</span>                                            声明双精度变量</span><br><span class="line"><span class="keyword">long</span>                                              声明长整型变量</span><br><span class="line"><span class="keyword">char</span>                                              声明字符型变量</span><br><span class="line"><span class="keyword">float</span>                                             声明浮点型变量</span><br><span class="line"><span class="keyword">short</span>                                             声明短整型变量</span><br><span class="line"><span class="keyword">signed</span>                                            声明有符号类型变量</span><br><span class="line"><span class="keyword">unsigned</span>                                          声明无符号类型变量</span><br><span class="line"><span class="class"><span class="keyword">struct</span>                                            声明结构体变量</span></span><br><span class="line"><span class="class"><span class="title">union</span>                                             声明联合数据类型</span></span><br><span class="line"><span class="class"><span class="title">enum</span>                                              声明枚举类型</span></span><br><span class="line"><span class="class"><span class="title">static</span>                                            声明静态变量</span></span><br><span class="line"><span class="class"><span class="title">switch</span>                                            用于开关语句</span></span><br><span class="line"><span class="class"><span class="title">case</span>                                              开关语句分支</span></span><br><span class="line"><span class="class"><span class="title">default</span>                                           开关语句中的“其他”分支</span></span><br><span class="line"><span class="class"><span class="title">break</span>                                             跳出当前循环</span></span><br><span class="line"><span class="class"><span class="title">register</span>                                          声明寄存器变量</span></span><br><span class="line"><span class="class"><span class="title">const</span>                                             声明只读变量</span></span><br><span class="line"><span class="class"><span class="title">volatile</span>                                          说明变量在程序执行中可被隐含地改变</span></span><br><span class="line"><span class="class"><span class="title">typedef</span>                                           用以给数据类型取别名(当然还有其他作用)</span></span><br><span class="line"><span class="class"><span class="title">extern</span>                                            声明变量是在其他文件正声明(也可以看做是引用变量)</span></span><br><span class="line"><span class="class"><span class="title">return</span>                                            子程序返回语句(可以带参数，也可不带参数)</span></span><br><span class="line"><span class="class"><span class="title">void</span>                                              声明函数无返回值或无参数，声明空类型指针</span></span><br><span class="line"><span class="class"><span class="title">continue</span>                                          结束当前循环，开始下一轮循环</span></span><br><span class="line"><span class="class"><span class="title">do</span>                                                循环语句的循环体</span></span><br><span class="line"><span class="class"><span class="title">while</span>                                             循环语句的循环条件</span></span><br><span class="line"><span class="class"><span class="title">if</span>                                                条件语句</span></span><br><span class="line"><span class="class"><span class="title">else</span>                                              条件语句否定分支(与 <span class="title">if</span> 连用)</span></span><br><span class="line"><span class="class"><span class="title">for</span>                                               一种循环语句(可意会不可言传)</span></span><br><span class="line"><span class="class"><span class="title">goto</span>                                              无条件跳转语句</span></span><br><span class="line"><span class="class"><span class="title">sizeof</span>                                            计算对象所占内存空间大小</span></span><br></pre></td></tr></table></figure>
<blockquote>
<h3 id="3-C中空语句的写法："><a href="#3-C中空语句的写法：" class="headerlink" title="3.C中空语句的写法："></a>3.C中空语句的写法：</h3></blockquote>
<p>在C中判断里的空语句使用<code>NULL;</code> ，而不是使用类似<code>if(NULL!=p);</code>这种方式。</p>
<blockquote>
<h3 id="4-if-、else语句的处理流程："><a href="#4-if-、else语句的处理流程：" class="headerlink" title="4.if 、else语句的处理流程："></a>4.if 、else语句的处理流程：</h3></blockquote>
<p>在使用if语句时应该先处理正常的情况在处理异常情况。因为正常情况的发生概率往往更大，如果将异常情况先进行处理，会造成多次的无谓判断，似的性能变低，这种方式也适用于其他任何编程语言。</p>
<blockquote>
<h3 id="5-switch语句的处理流程和特点："><a href="#5-switch语句的处理流程和特点：" class="headerlink" title="5.switch语句的处理流程和特点："></a>5.switch语句的处理流程和特点：</h3></blockquote>
<p>如果需要进行的判断较多，建议使用switch语句，case分支后只能是整型或者是字符型的常量和常量表达式，语句精炼，阅读性高，且必须使用defult分支，即使程序不需要defult处理。case分支的排列顺序应该按照字母顺序或者数字顺序来进行排序，与if、else语句一样的是，我们需要将正常情况放在前面，异常情况放在后面。</p>
<!--if、else和switch语句的共同点：执行概率高的放在最前面判断。-->
<blockquote>
<h3 id="6-C语言中循环语句："><a href="#6-C语言中循环语句：" class="headerlink" title="6.C语言中循环语句："></a>6.C语言中循环语句：</h3></blockquote>
<p>在C中的循环语句有 while、do-while、for，while（）语句先判断括号内的值，为真则执行大括号内的逻辑代码，否则不会执行，如果括号内是一个1，那就表示这是个死循环。</p>
<blockquote>
<h3 id="7-break和continue的区别："><a href="#7-break和continue的区别：" class="headerlink" title="7.break和continue的区别："></a>7.break和continue的区别：</h3><p>break关键字表示终止本层的循环，而continue代表终止本次循环。并且switch、case语句中并不能使用continue关键字，除非其外套有一层循环。在有嵌套的循环中应将长循环套在端循环的内部以提高性能。不能再循环体内修改循环变量，防止循环失控，一般来说循环体内的代码不应该超过20行，且循环嵌套应控制在3层以内。</p>
<h3 id="8-VOID类型："><a href="#8-VOID类型：" class="headerlink" title="8.VOID类型："></a>8.VOID类型：</h3></blockquote>
<p><code>void*</code>的意思是空指针，他可以指向任何类型的数据，如果指针p1和p2的类型相同，我们可以直接在p1和p2之间互相赋值，但是如果p1和p2指向不同的数据类型，那就必须将运算符右侧的指针类型转换为左边的指针类型，for example：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> *p1;</span><br><span class="line"><span class="keyword">int</span> *p2;</span><br><span class="line">p1=(<span class="keyword">float</span>*)p2;</span><br></pre></td></tr></table></figure>
<p>而void类型则不同，任何类型的指针都可以直接赋值给他，无需强制类型转换，for example:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> *p1;</span><br><span class="line"><span class="keyword">int</span> *p2;</span><br><span class="line">p1=p2;</span><br></pre></td></tr></table></figure>
<p>但是，任何指针类型并不能直接赋值给<code>void*</code>。另外，C语言中，如果函数没有写返回值，则默认为<code>int</code>。C语言中可以向无参函数传递任意类型的参数，但是在C++中的无参函数不接受任何参数。按照ANSI标准，不能对任何<code>void</code>指针进行算法操作，但是GUN则不同，他允许void指针进行算法操作。如果函数的参数可以是任意类型的指针那就可以声明其参数为<code>void*</code>。</p>
<blockquote>
<p>return关键字是用来终止一个函数并返回其后面跟着的值。</p>
<h3 id="9-const关键字"><a href="#9-const关键字" class="headerlink" title="9.const关键字"></a>9.const关键字</h3></blockquote>
<p>const是 constant 的缩写，是恒定不变的意思，也翻译为常量、常数等。很多人都认为被 const 修饰的值是常量。这是不精确的，精确的说应该是只读的变量，其值在编译时不能被使用，因为编译器在编译时不知道其存储的内容。这也就说明了为什么用const修饰的变量必须在定义的同时进行初始化操作，如果不对const修饰的变量进行初始化，那么这个变量在程序运行时也不会改变，使得const变得没有意义。（在C语言中使用const修饰的变量永远是变量）。编译器一般不会给const变量分配内存空间，他只是给出了对应的内存地址，在程序运行过程中他只有一个，即地址。const在修饰指针时，离谁近const就修饰谁（先忽略类型名），for example：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> *p; <span class="comment">//const 修饰*p,p 是指针，*p 是指针指向的对象，不可变 </span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> *p; <span class="comment">//const 修饰*p,p 是指针，*p 是指针指向的对象，不可变 </span></span><br><span class="line"><span class="keyword">int</span> *<span class="keyword">const</span> p; <span class="comment">//const 修饰 p,p 不可变， p 指向的对象可变 </span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> *<span class="keyword">const</span> p; <span class="comment">//前一个 const 修饰*p,后一个 const 修饰p,指针p和p指向的对象 都不可变</span></span><br></pre></td></tr></table></figure>
<p>const也可以修饰参数和函数返回值，情况：当一个函数的参数和一个函数的返回值在不希望被改变的情况下，可以用const修饰。在连接文件中引用const，举个例子：</p>
<p><code>extern const int i;//正确的声明</code> </p>
<p><code>extern const int j=10;//错误！只读变量的值不能改变。</code></p>
<p><em>extern关键字只是声明，不是定义，不会开辟内存空间。</em></p>
]]></content>
      
        <categories>
            
            <category> C语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c语言 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
